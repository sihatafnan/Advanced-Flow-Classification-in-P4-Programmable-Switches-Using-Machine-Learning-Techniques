{
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : [
        ["tmp_133", 104, false],
        ["count_threshold_0", 32, false],
        ["tmp", 1, false],
        ["tmp_0", 32, false],
        ["tmp_1", 32, false],
        ["tmp_2", 16, false],
        ["tmp_3", 16, false],
        ["tmp_4", 8, false],
        ["tmp_5", 104, false],
        ["tmp_6", 32, false],
        ["tmp_7", 32, false],
        ["tmp_8", 32, false],
        ["tmp_9", 16, false],
        ["tmp_10", 16, false],
        ["tmp_11", 8, false],
        ["tmp_12", 104, false],
        ["tmp_13", 32, false],
        ["tmp_14", 32, false],
        ["tmp_15", 32, false],
        ["tmp_16", 16, false],
        ["tmp_17", 16, false],
        ["tmp_18", 8, false],
        ["tmp_19", 1, false],
        ["tmp_20", 32, false],
        ["tmp_21", 32, false],
        ["tmp_22", 16, false],
        ["tmp_23", 16, false],
        ["tmp_24", 8, false],
        ["tmp_25", 104, false],
        ["tmp_26", 104, false],
        ["tmp_27", 104, false],
        ["tmp_28", 104, false],
        ["tmp_29", 32, false],
        ["tmp_30", 32, false],
        ["tmp_31", 1, false],
        ["tmp_32", 1, false],
        ["tmp_33", 32, false],
        ["tmp_34", 32, false],
        ["tmp_35", 32, false],
        ["tmp_36", 32, false],
        ["tmp_37", 16, false],
        ["tmp_38", 16, false],
        ["tmp_39", 16, false],
        ["tmp_40", 16, false],
        ["tmp_41", 8, false],
        ["tmp_42", 8, false],
        ["tmp_43", 104, false],
        ["tmp_44", 104, false],
        ["tmp_45", 32, false],
        ["tmp_46", 32, false],
        ["tmp_47", 32, false],
        ["tmp_48", 32, false],
        ["tmp_49", 16, false],
        ["tmp_50", 16, false],
        ["tmp_51", 16, false],
        ["tmp_52", 16, false],
        ["tmp_53", 8, false],
        ["tmp_54", 8, false],
        ["tmp_55", 32, false],
        ["tmp_56", 32, false],
        ["tmp_57", 1, false],
        ["tmp_58", 32, false],
        ["tmp_59", 32, false],
        ["tmp_60", 16, false],
        ["tmp_61", 16, false],
        ["tmp_62", 8, false],
        ["tmp_63", 104, false],
        ["tmp_64", 104, false],
        ["tmp_65", 104, false],
        ["tmp_66", 104, false],
        ["tmp_67", 32, false],
        ["tmp_68", 32, false],
        ["tmp_69", 1, false],
        ["tmp_70", 1, false],
        ["tmp_71", 32, false],
        ["tmp_72", 32, false],
        ["tmp_73", 32, false],
        ["tmp_74", 32, false],
        ["tmp_75", 16, false],
        ["tmp_76", 16, false],
        ["tmp_77", 16, false],
        ["tmp_78", 16, false],
        ["tmp_79", 8, false],
        ["tmp_80", 8, false],
        ["tmp_81", 104, false],
        ["tmp_82", 104, false],
        ["tmp_83", 32, false],
        ["tmp_84", 32, false],
        ["tmp_85", 32, false],
        ["tmp_86", 32, false],
        ["tmp_87", 16, false],
        ["tmp_88", 16, false],
        ["tmp_89", 16, false],
        ["tmp_90", 16, false],
        ["tmp_91", 8, false],
        ["tmp_92", 8, false],
        ["tmp_93", 32, false],
        ["tmp_94", 32, false],
        ["tmp_95", 1, false],
        ["tmp_96", 32, false],
        ["tmp_97", 32, false],
        ["tmp_98", 16, false],
        ["tmp_99", 16, false],
        ["tmp_100", 8, false],
        ["tmp_101", 104, false],
        ["tmp_102", 104, false],
        ["tmp_103", 104, false],
        ["tmp_104", 104, false],
        ["tmp_105", 32, false],
        ["tmp_106", 32, false],
        ["tmp_107", 1, false],
        ["tmp_108", 1, false],
        ["tmp_109", 32, false],
        ["tmp_110", 32, false],
        ["tmp_111", 32, false],
        ["tmp_112", 32, false],
        ["tmp_113", 16, false],
        ["tmp_114", 16, false],
        ["tmp_115", 16, false],
        ["tmp_116", 16, false],
        ["tmp_117", 8, false],
        ["tmp_118", 8, false],
        ["tmp_119", 104, false],
        ["tmp_120", 104, false],
        ["tmp_121", 32, false],
        ["tmp_122", 32, false],
        ["tmp_123", 32, false],
        ["tmp_124", 32, false],
        ["tmp_125", 16, false],
        ["tmp_126", 16, false],
        ["tmp_127", 16, false],
        ["tmp_128", 16, false],
        ["tmp_129", 8, false],
        ["tmp_130", 8, false],
        ["tmp_131", 32, false],
        ["tmp_132", 32, false],
        ["metadata_t.src_ip", 32, false],
        ["metadata_t.dst_ip", 32, false],
        ["metadata_t.src_port", 16, false],
        ["metadata_t.dst_port", 16, false],
        ["metadata_t.proto", 8, false],
        ["metadata_t.l4_src_port", 16, false],
        ["metadata_t.l4_dst_port", 16, false],
        ["metadata_t.l3_admit", 1, false],
        ["metadata_t.dst_vlan", 12, false],
        ["metadata_t.overflow_flag", 1, false]
      ]
    },
    {
      "name" : "tracking_metadata_t",
      "id" : 1,
      "fields" : [
        ["mKeyInTable", 104, false],
        ["mSIpInTable", 32, false],
        ["mDIpInTable", 32, false],
        ["mSPortInTable", 16, false],
        ["mDPortInTable", 16, false],
        ["mProtoInTable", 8, false],
        ["mCountInTable", 32, false],
        ["mIndex", 32, false],
        ["mValid", 1, false],
        ["mKeyCarried", 104, false],
        ["mCountCarried", 32, false],
        ["mSIpCarried", 32, false],
        ["mDIpCarried", 32, false],
        ["mSPortCarried", 16, false],
        ["mDPortCarried", 16, false],
        ["mProtoCarried", 8, false],
        ["mSwapSpace", 104, false],
        ["_padding", 7, false]
      ]
    },
    {
      "name" : "standard_metadata",
      "id" : 2,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["instance_type", 32, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["mcast_grp", 16, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["parser_error", 32, false],
        ["priority", 3, false],
        ["_padding_0", 3, false]
      ]
    },
    {
      "name" : "packet_out_header_t",
      "id" : 3,
      "fields" : [
        ["egress_port", 16, false],
        ["mcast_grp", 16, false]
      ]
    },
    {
      "name" : "packet_in_header_t",
      "id" : 4,
      "fields" : [
        ["algo_indicator", 16, false],
        ["src_ip", 32, false],
        ["dst_ip", 32, false],
        ["src_port", 16, false],
        ["dst_port", 16, false],
        ["proto", 8, false],
        ["ingress_port", 16, false]
      ]
    },
    {
      "name" : "ethernet_t",
      "id" : 5,
      "fields" : [
        ["dstAddr", 48, false],
        ["srcAddr", 48, false],
        ["etherType", 16, false]
      ]
    },
    {
      "name" : "ipv4_t",
      "id" : 6,
      "fields" : [
        ["version", 4, false],
        ["ihl", 4, false],
        ["diffserv", 8, false],
        ["totalLen", 16, false],
        ["identification", 16, false],
        ["flags", 3, false],
        ["fragOffset", 13, false],
        ["ttl", 8, false],
        ["protocol", 8, false],
        ["hdrChecksum", 16, false],
        ["srcAddr", 32, false],
        ["dstAddr", 32, false]
      ]
    },
    {
      "name" : "tcp_t",
      "id" : 7,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false],
        ["seqNo", 32, false],
        ["ackNo", 32, false],
        ["dataOffset", 4, false],
        ["res", 4, false],
        ["flags", 8, false],
        ["window", 16, false],
        ["checksum", 16, false],
        ["urgentPtr", 16, false]
      ]
    },
    {
      "name" : "udp_t",
      "id" : 8,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false],
        ["length_", 16, false],
        ["checksum", 16, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "track_meta_0",
      "id" : 0,
      "header_type" : "tracking_metadata_t",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "scalars",
      "id" : 1,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 2,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "packet_out",
      "id" : 3,
      "header_type" : "packet_out_header_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "packet_in",
      "id" : 4,
      "header_type" : "packet_in_header_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ethernet",
      "id" : 5,
      "header_type" : "ethernet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv4",
      "id" : 6,
      "header_type" : "ipv4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "tcp",
      "id" : 7,
      "header_type" : "tcp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "udp",
      "id" : 8,
      "header_type" : "udp_t",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [],
  "errors" : [
    ["NoError", 1],
    ["PacketTooShort", 2],
    ["NoMatch", 3],
    ["StackOutOfBounds", 4],
    ["HeaderTooShort", 5],
    ["ParserTimeout", 6],
    ["ParserInvalidArgument", 7]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x00ff",
              "mask" : null,
              "next_state" : "parse_packet_out"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : "parse_ethernet"
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ]
        },
        {
          "name" : "parse_packet_out",
          "id" : 1,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "packet_out"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "value" : "default",
              "mask" : null,
              "next_state" : "parse_ethernet"
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_ethernet",
          "id" : 2,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ethernet"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            }
          ]
        },
        {
          "name" : "parse_ipv4",
          "id" : 3,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x06",
              "mask" : null,
              "next_state" : "parse_tcp"
            },
            {
              "type" : "hexstr",
              "value" : "0x11",
              "mask" : null,
              "next_state" : "parse_udp"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ]
        },
        {
          "name" : "parse_tcp",
          "id" : 4,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "tcp"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "metadata_t.l4_src_port"]
                },
                {
                  "type" : "field",
                  "value" : ["tcp", "srcPort"]
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "metadata_t.l4_dst_port"]
                },
                {
                  "type" : "field",
                  "value" : ["tcp", "dstPort"]
                }
              ],
              "op" : "set"
            }
          ],
          "transitions" : [
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_udp",
          "id" : 5,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "udp"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "metadata_t.l4_src_port"]
                },
                {
                  "type" : "field",
                  "value" : ["udp", "srcPort"]
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "metadata_t.l4_dst_port"]
                },
                {
                  "type" : "field",
                  "value" : ["udp", "dstPort"]
                }
              ],
              "op" : "set"
            }
          ],
          "transitions" : [
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "includes/parser.p4",
        "line" : 58,
        "column" : 8,
        "source_fragment" : "basic_tutor_switch_deparser"
      },
      "order" : ["packet_in", "ethernet", "ipv4", "tcp", "udp"]
    }
  ],
  "meter_arrays" : [],
  "counter_arrays" : [],
  "register_arrays" : [
    {
      "name" : "basic_tutorial_ingress.flow_tracker_stage1",
      "id" : 0,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 26,
        "column" : 27,
        "source_fragment" : "flow_tracker_stage1"
      },
      "size" : 32,
      "bitwidth" : 104
    },
    {
      "name" : "basic_tutorial_ingress.packet_counter_stage1",
      "id" : 1,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 27,
        "column" : 28,
        "source_fragment" : "packet_counter_stage1"
      },
      "size" : 1024,
      "bitwidth" : 32
    },
    {
      "name" : "basic_tutorial_ingress.valid_bit_stage1",
      "id" : 2,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 28,
        "column" : 27,
        "source_fragment" : "valid_bit_stage1"
      },
      "size" : 1024,
      "bitwidth" : 1
    },
    {
      "name" : "basic_tutorial_ingress.src_ip_stage1",
      "id" : 3,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 29,
        "column" : 28,
        "source_fragment" : "src_ip_stage1"
      },
      "size" : 1024,
      "bitwidth" : 32
    },
    {
      "name" : "basic_tutorial_ingress.dst_ip_stage1",
      "id" : 4,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 30,
        "column" : 28,
        "source_fragment" : "dst_ip_stage1"
      },
      "size" : 1024,
      "bitwidth" : 32
    },
    {
      "name" : "basic_tutorial_ingress.src_port_stage1",
      "id" : 5,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 31,
        "column" : 28,
        "source_fragment" : "src_port_stage1"
      },
      "size" : 1024,
      "bitwidth" : 16
    },
    {
      "name" : "basic_tutorial_ingress.dst_port_stage1",
      "id" : 6,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 32,
        "column" : 28,
        "source_fragment" : "dst_port_stage1"
      },
      "size" : 1024,
      "bitwidth" : 16
    },
    {
      "name" : "basic_tutorial_ingress.protocol_stage1",
      "id" : 7,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 33,
        "column" : 27,
        "source_fragment" : "protocol_stage1"
      },
      "size" : 1024,
      "bitwidth" : 8
    },
    {
      "name" : "basic_tutorial_ingress.flow_tracker_stage2",
      "id" : 8,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 35,
        "column" : 27,
        "source_fragment" : "flow_tracker_stage2"
      },
      "size" : 32,
      "bitwidth" : 104
    },
    {
      "name" : "basic_tutorial_ingress.packet_counter_stage2",
      "id" : 9,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 36,
        "column" : 28,
        "source_fragment" : "packet_counter_stage2"
      },
      "size" : 1024,
      "bitwidth" : 32
    },
    {
      "name" : "basic_tutorial_ingress.valid_bit_stage2",
      "id" : 10,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 37,
        "column" : 27,
        "source_fragment" : "valid_bit_stage2"
      },
      "size" : 1024,
      "bitwidth" : 1
    },
    {
      "name" : "basic_tutorial_ingress.src_ip_stage2",
      "id" : 11,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 38,
        "column" : 28,
        "source_fragment" : "src_ip_stage2"
      },
      "size" : 1024,
      "bitwidth" : 32
    },
    {
      "name" : "basic_tutorial_ingress.dst_ip_stage2",
      "id" : 12,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 39,
        "column" : 28,
        "source_fragment" : "dst_ip_stage2"
      },
      "size" : 1024,
      "bitwidth" : 32
    },
    {
      "name" : "basic_tutorial_ingress.src_port_stage2",
      "id" : 13,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 40,
        "column" : 28,
        "source_fragment" : "src_port_stage2"
      },
      "size" : 1024,
      "bitwidth" : 16
    },
    {
      "name" : "basic_tutorial_ingress.dst_port_stage2",
      "id" : 14,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 41,
        "column" : 28,
        "source_fragment" : "dst_port_stage2"
      },
      "size" : 1024,
      "bitwidth" : 16
    },
    {
      "name" : "basic_tutorial_ingress.protocol_stage2",
      "id" : 15,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 42,
        "column" : 27,
        "source_fragment" : "protocol_stage2"
      },
      "size" : 1024,
      "bitwidth" : 8
    },
    {
      "name" : "basic_tutorial_ingress.flow_tracker_stage3",
      "id" : 16,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 44,
        "column" : 27,
        "source_fragment" : "flow_tracker_stage3"
      },
      "size" : 32,
      "bitwidth" : 104
    },
    {
      "name" : "basic_tutorial_ingress.packet_counter_stage3",
      "id" : 17,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 45,
        "column" : 28,
        "source_fragment" : "packet_counter_stage3"
      },
      "size" : 1024,
      "bitwidth" : 32
    },
    {
      "name" : "basic_tutorial_ingress.valid_bit_stage3",
      "id" : 18,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 46,
        "column" : 27,
        "source_fragment" : "valid_bit_stage3"
      },
      "size" : 1024,
      "bitwidth" : 1
    },
    {
      "name" : "basic_tutorial_ingress.src_ip_stage3",
      "id" : 19,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 47,
        "column" : 28,
        "source_fragment" : "src_ip_stage3"
      },
      "size" : 1024,
      "bitwidth" : 32
    },
    {
      "name" : "basic_tutorial_ingress.dst_ip_stage3",
      "id" : 20,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 48,
        "column" : 28,
        "source_fragment" : "dst_ip_stage3"
      },
      "size" : 1024,
      "bitwidth" : 32
    },
    {
      "name" : "basic_tutorial_ingress.src_port_stage3",
      "id" : 21,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 49,
        "column" : 28,
        "source_fragment" : "src_port_stage3"
      },
      "size" : 1024,
      "bitwidth" : 16
    },
    {
      "name" : "basic_tutorial_ingress.dst_port_stage3",
      "id" : 22,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 50,
        "column" : 28,
        "source_fragment" : "dst_port_stage3"
      },
      "size" : 1024,
      "bitwidth" : 16
    },
    {
      "name" : "basic_tutorial_ingress.protocol_stage3",
      "id" : 23,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 51,
        "column" : 27,
        "source_fragment" : "protocol_stage3"
      },
      "size" : 1024,
      "bitwidth" : 8
    },
    {
      "name" : "basic_tutorial_ingress.flow_tracker_stage4",
      "id" : 24,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 53,
        "column" : 27,
        "source_fragment" : "flow_tracker_stage4"
      },
      "size" : 32,
      "bitwidth" : 104
    },
    {
      "name" : "basic_tutorial_ingress.packet_counter_stage4",
      "id" : 25,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 54,
        "column" : 28,
        "source_fragment" : "packet_counter_stage4"
      },
      "size" : 1024,
      "bitwidth" : 32
    },
    {
      "name" : "basic_tutorial_ingress.valid_bit_stage4",
      "id" : 26,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 55,
        "column" : 27,
        "source_fragment" : "valid_bit_stage4"
      },
      "size" : 1024,
      "bitwidth" : 1
    },
    {
      "name" : "basic_tutorial_ingress.src_ip_stage4",
      "id" : 27,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 56,
        "column" : 28,
        "source_fragment" : "src_ip_stage4"
      },
      "size" : 1024,
      "bitwidth" : 32
    },
    {
      "name" : "basic_tutorial_ingress.dst_ip_stage4",
      "id" : 28,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 57,
        "column" : 28,
        "source_fragment" : "dst_ip_stage4"
      },
      "size" : 1024,
      "bitwidth" : 32
    },
    {
      "name" : "basic_tutorial_ingress.src_port_stage4",
      "id" : 29,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 58,
        "column" : 28,
        "source_fragment" : "src_port_stage4"
      },
      "size" : 1024,
      "bitwidth" : 16
    },
    {
      "name" : "basic_tutorial_ingress.dst_port_stage4",
      "id" : 30,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 59,
        "column" : 28,
        "source_fragment" : "dst_port_stage4"
      },
      "size" : 1024,
      "bitwidth" : 16
    },
    {
      "name" : "basic_tutorial_ingress.protocol_stage4",
      "id" : 31,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 60,
        "column" : 27,
        "source_fragment" : "protocol_stage4"
      },
      "size" : 1024,
      "bitwidth" : 8
    }
  ],
  "calculations" : [
    {
      "name" : "calc",
      "id" : 0,
      "algo" : "crc32",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "metadata_t.l4_src_port"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "metadata_t.l4_dst_port"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        }
      ]
    },
    {
      "name" : "calc_0",
      "id" : 1,
      "algo" : "crc32",
      "input" : [
        {
          "type" : "field",
          "value" : ["track_meta_0", "mKeyCarried"]
        }
      ]
    },
    {
      "name" : "calc_1",
      "id" : 2,
      "algo" : "crc32",
      "input" : [
        {
          "type" : "field",
          "value" : ["track_meta_0", "mKeyCarried"]
        }
      ]
    },
    {
      "name" : "calc_2",
      "id" : 3,
      "algo" : "crc32",
      "input" : [
        {
          "type" : "field",
          "value" : ["track_meta_0", "mKeyCarried"]
        }
      ]
    },
    {
      "name" : "calc_3",
      "id" : 4,
      "source_info" : {
        "filename" : "includes/checksums.p4",
        "line" : 20,
        "column" : 8,
        "source_fragment" : "update_checksum( ..."
      },
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "version"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ihl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "diffserv"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "totalLen"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "identification"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "flags"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "fragOffset"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ttl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        }
      ]
    }
  ],
  "learn_lists" : [],
  "actions" : [
    {
      "name" : "drop",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 1,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "basic_tutorial_ingress.ipv4_forwarding.send_to_cpu",
      "id" : 2,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00ff"
            }
          ],
          "source_info" : {
            "filename" : "includes/ipv4_forward.p4",
            "line" : 14,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = 255"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "packet_in"
            }
          ],
          "source_info" : {
            "filename" : "includes/ipv4_forward.p4",
            "line" : 15,
            "column" : 8,
            "source_fragment" : "hdr.packet_in.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["packet_in", "ingress_port"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "includes/ipv4_forward.p4",
            "line" : 16,
            "column" : 8,
            "source_fragment" : "hdr.packet_in.ingress_port = (bit<16>)standard_metadata.ingress_port"
          }
        }
      ]
    },
    {
      "name" : "basic_tutorial_ingress.ipv4_forwarding.ipv4_forward",
      "id" : 3,
      "runtime_data" : [
        {
          "name" : "dstAddr",
          "bitwidth" : 48
        },
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "includes/ipv4_forward.p4",
            "line" : 20,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "srcAddr"]
            },
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "includes/ipv4_forward.p4",
            "line" : 21,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.srcAddr = hdr.ethernet.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "includes/ipv4_forward.p4",
            "line" : 22,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.dstAddr = dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ttl"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "ttl"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "includes/ipv4_forward.p4",
            "line" : 23,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.ttl = hdr.ipv4.ttl - 1"
          }
        }
      ]
    },
    {
      "name" : "basic_tutorial_ingress.do_stage1",
      "id" : 4,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mKeyCarried"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "|",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<<",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "|",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "<<",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "|",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "|",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["ipv4", "srcAddr"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x20"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffffffffffffffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["ipv4", "dstAddr"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x00000001ffffffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x10"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffffffffffffffffffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["scalars", "metadata_t.l4_src_port"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x0000000000000001ffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x10"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffffffffffffffffffffffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "field",
                                            "value" : ["scalars", "metadata_t.l4_dst_port"]
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0x00000000000000000001ffff"
                                      }
                                    }
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffffffffffffffffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x8"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffffffffffffffffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "field",
                            "value" : ["ipv4", "protocol"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x000000000000000000000001ff"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 66,
            "column" : 8,
            "source_fragment" : "track_meta.mKeyCarried = (bit<104>)(hdr.ipv4.srcAddr++hdr.ipv4.dstAddr++metadata.l4_src_port++metadata.l4_dst_port++hdr.ipv4.protocol"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "calculation",
              "value" : "calc"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000020"
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 72,
            "column" : 8,
            "source_fragment" : "hash(track_meta.mIndex, HashAlgorithm.crc32, (bit<32>)0, {hdr.ipv4.srcAddr, ..."
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mKeyInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.flow_tracker_stage1"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 79,
            "column" : 8,
            "source_fragment" : "flow_tracker_stage1.read(track_meta.mKeyInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mCountInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.packet_counter_stage1"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 80,
            "column" : 8,
            "source_fragment" : "packet_counter_stage1.read(track_meta.mCountInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mValid"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.valid_bit_stage1"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 81,
            "column" : 8,
            "source_fragment" : "valid_bit_stage1.read(track_meta.mValid, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mSIpInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.src_ip_stage1"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 82,
            "column" : 8,
            "source_fragment" : "src_ip_stage1.read(track_meta.mSIpInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mDIpInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.dst_ip_stage1"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 83,
            "column" : 8,
            "source_fragment" : "dst_ip_stage1.read(track_meta.mDIpInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mSPortInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.src_port_stage1"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 84,
            "column" : 8,
            "source_fragment" : "src_port_stage1.read(track_meta.mSPortInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mDPortInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.dst_port_stage1"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 85,
            "column" : 8,
            "source_fragment" : "dst_port_stage1.read(track_meta.mDPortInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mProtoInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.protocol_stage1"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 86,
            "column" : 8,
            "source_fragment" : "protocol_stage1.read(track_meta.mProtoInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["track_meta_0", "mCountInTable"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "count_threshold_0"]
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 87,
            "column" : 33,
            "source_fragment" : "(track_meta.mCountInTable == count_threshold) ? (bit<1>) 1 : (bit<1>) 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["scalars", "count_threshold_0"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 87,
            "column" : 33,
            "source_fragment" : "(track_meta.mCountInTable == count_threshold) ? (bit<1>) 1 : (bit<1>) 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t.overflow_flag"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 87,
            "column" : 8,
            "source_fragment" : "metadata.overflow_flag ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_0"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 88,
            "column" : 26,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<32>)0 : track_meta.mSIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_0"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 88,
            "column" : 26,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<32>)0 : track_meta.mSIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t.src_ip"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_0"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 88,
            "column" : 8,
            "source_fragment" : "metadata.src_ip ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_1"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 89,
            "column" : 26,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<32>)0 : track_meta.mDIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_1"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 89,
            "column" : 26,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<32>)0 : track_meta.mDIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t.dst_ip"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_1"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 89,
            "column" : 8,
            "source_fragment" : "metadata.dst_ip ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_2"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x0001"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_2"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 90,
            "column" : 28,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<16>)1 : track_meta.mSPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_2"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_2"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 90,
            "column" : 28,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<16>)1 : track_meta.mSPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t.src_port"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_2"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 90,
            "column" : 8,
            "source_fragment" : "metadata.src_port ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x0001"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_3"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 91,
            "column" : 28,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<16>)1 : track_meta.mDPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_3"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 91,
            "column" : 28,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<16>)1 : track_meta.mDPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t.dst_port"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 91,
            "column" : 8,
            "source_fragment" : "metadata.dst_port ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_4"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 92,
            "column" : 25,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<8>)0 : track_meta.mProtoInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mProtoInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_4"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 92,
            "column" : 25,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<8>)0 : track_meta.mProtoInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t.proto"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_4"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 92,
            "column" : 8,
            "source_fragment" : "metadata.proto ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_5"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "|",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<<",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "|",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "<<",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "|",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "|",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "<<",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "field",
                                                                                    "value" : ["ipv4", "srcAddr"]
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffffffffffffffff"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0x20"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["ipv4", "dstAddr"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x00000001ffffffff"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffffffffffffffffffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x10"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["scalars", "metadata_t.l4_src_port"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x0000000000000001ffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffffffffffffffffffffffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x10"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "field",
                                                "value" : ["scalars", "metadata_t.l4_dst_port"]
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x00000000000000000001ffff"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffffffffffffffffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x8"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "field",
                                "value" : ["ipv4", "protocol"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffffffffffffffffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x000000000000000000000001ff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_5"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["track_meta_0", "mValid"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 95,
            "column" : 33,
            "source_fragment" : "(track_meta.mValid == 0)? track_meta.mKeyCarried : track_meta.mKeyInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_5"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mKeyInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_5"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mValid"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 95,
            "column" : 33,
            "source_fragment" : "(track_meta.mValid == 0)? track_meta.mKeyCarried : track_meta.mKeyInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mKeyInTable"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_5"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 95,
            "column" : 8,
            "source_fragment" : "track_meta.mKeyInTable ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mSwapSpace"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "-",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_5"]
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "|",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "|",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "<<",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "|",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "<<",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "|",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "<<",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "field",
                                                                                        "value" : ["ipv4", "srcAddr"]
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0xffffffffffffffff"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0x20"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "field",
                                                                                    "value" : ["ipv4", "dstAddr"]
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffffffffffffffff"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0x00000001ffffffff"
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffffffffffffffffffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x10"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "field",
                                                                    "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffffffffffffffffffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x0000000000000001ffff"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffffffffffffffffffffffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0x10"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "field",
                                                    "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffffffffffffffffffffffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x00000000000000000001ffff"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffffffffffffffffffffffffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x8"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffffffffffffffffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["ipv4", "protocol"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffffffffffffffffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x000000000000000000000001ff"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 96,
            "column" : 8,
            "source_fragment" : "track_meta.mSwapSpace = track_meta.mKeyInTable - track_meta.mKeyCarried"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_133"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "|",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<<",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "|",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "<<",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "|",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "|",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["ipv4", "srcAddr"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x20"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffffffffffffffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["ipv4", "dstAddr"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x00000001ffffffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x10"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffffffffffffffffffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["scalars", "metadata_t.l4_src_port"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x0000000000000001ffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x10"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffffffffffffffffffffffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "field",
                                            "value" : ["scalars", "metadata_t.l4_dst_port"]
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0x00000000000000000001ffff"
                                      }
                                    }
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffffffffffffffffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x8"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffffffffffffffffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "field",
                            "value" : ["ipv4", "protocol"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x000000000000000000000001ff"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 66,
            "column" : 44,
            "source_fragment" : "hdr.ipv4.srcAddr++hdr.ipv4.dstAddr++metadata.l4_src_port++metadata.l4_dst_port++hdr.ipv4.protocol"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.flow_tracker_stage1"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_133"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 99,
            "column" : 8,
            "source_fragment" : "flow_tracker_stage1.write(track_meta.mIndex, track_meta.mKeyCarried)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_6"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000001"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_6"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_5"]
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "|",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "<<",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "|",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "|",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "|",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "<<",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "srcAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x20"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0xffffffffffffffff"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "field",
                                                                                            "value" : ["ipv4", "dstAddr"]
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0x00000001ffffffff"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x10"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffffffffffffffffffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x0000000000000001ffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x10"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffffffffffffffffffffffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x00000000000000000001ffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x8"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffffffffffffffffffffffffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "field",
                                            "value" : ["ipv4", "protocol"]
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0x000000000000000000000001ff"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 100,
            "column" : 56,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? (bit<32>)(track_meta.mCountInTable + 1) : (bit<32>)1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_6"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000001"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_6"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "-",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["scalars", "tmp_5"]
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "|",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "<<",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "|",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "|",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "<<",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "|",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "<<",
                                                                                              "left" : {
                                                                                                "type" : "expression",
                                                                                                "value" : {
                                                                                                  "op" : "&",
                                                                                                  "left" : {
                                                                                                    "type" : "field",
                                                                                                    "value" : ["ipv4", "srcAddr"]
                                                                                                  },
                                                                                                  "right" : {
                                                                                                    "type" : "hexstr",
                                                                                                    "value" : "0xffffffffffffffff"
                                                                                                  }
                                                                                                }
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0x20"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "dstAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x00000001ffffffff"
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffffffffffffffffffff"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0x10"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x0000000000000001ffff"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffffffffffffffffffffffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x10"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x00000000000000000001ffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffffffffffffffffffffffffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x8"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "field",
                                                "value" : ["ipv4", "protocol"]
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x000000000000000000000001ff"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffffffffffffffffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 100,
            "column" : 56,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? (bit<32>)(track_meta.mCountInTable + 1) : (bit<32>)1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.packet_counter_stage1"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_6"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 100,
            "column" : 8,
            "source_fragment" : "packet_counter_stage1.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? (bit<32>)(track_meta.mCountInTable + 1) : (bit<32>)1))"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.valid_bit_stage1"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 101,
            "column" : 8,
            "source_fragment" : "valid_bit_stage1.write(track_meta.mIndex, (bit<1>)1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_7"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["ipv4", "srcAddr"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_7"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_5"]
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "|",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "<<",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "|",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "|",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "|",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "<<",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "srcAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x20"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0xffffffffffffffff"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "field",
                                                                                            "value" : ["ipv4", "dstAddr"]
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0x00000001ffffffff"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x10"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffffffffffffffffffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x0000000000000001ffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x10"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffffffffffffffffffffffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x00000000000000000001ffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x8"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffffffffffffffffffffffffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "field",
                                            "value" : ["ipv4", "protocol"]
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0x000000000000000000000001ff"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 102,
            "column" : 48,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? hdr.ipv4.srcAddr : track_meta.mSIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_7"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_7"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "-",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["scalars", "tmp_5"]
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "|",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "<<",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "|",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "|",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "<<",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "|",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "<<",
                                                                                              "left" : {
                                                                                                "type" : "expression",
                                                                                                "value" : {
                                                                                                  "op" : "&",
                                                                                                  "left" : {
                                                                                                    "type" : "field",
                                                                                                    "value" : ["ipv4", "srcAddr"]
                                                                                                  },
                                                                                                  "right" : {
                                                                                                    "type" : "hexstr",
                                                                                                    "value" : "0xffffffffffffffff"
                                                                                                  }
                                                                                                }
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0x20"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "dstAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x00000001ffffffff"
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffffffffffffffffffff"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0x10"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x0000000000000001ffff"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffffffffffffffffffffffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x10"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x00000000000000000001ffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffffffffffffffffffffffffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x8"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "field",
                                                "value" : ["ipv4", "protocol"]
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x000000000000000000000001ff"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffffffffffffffffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 102,
            "column" : 48,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? hdr.ipv4.srcAddr : track_meta.mSIpInTable"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.src_ip_stage1"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_7"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 102,
            "column" : 8,
            "source_fragment" : "src_ip_stage1.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? hdr.ipv4.srcAddr : track_meta.mSIpInTable))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_8"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["ipv4", "dstAddr"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_8"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_5"]
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "|",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "<<",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "|",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "|",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "|",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "<<",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "srcAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x20"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0xffffffffffffffff"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "field",
                                                                                            "value" : ["ipv4", "dstAddr"]
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0x00000001ffffffff"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x10"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffffffffffffffffffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x0000000000000001ffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x10"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffffffffffffffffffffffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x00000000000000000001ffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x8"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffffffffffffffffffffffffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "field",
                                            "value" : ["ipv4", "protocol"]
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0x000000000000000000000001ff"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 103,
            "column" : 48,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? hdr.ipv4.dstAddr : track_meta.mDIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_8"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_8"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "-",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["scalars", "tmp_5"]
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "|",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "<<",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "|",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "|",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "<<",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "|",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "<<",
                                                                                              "left" : {
                                                                                                "type" : "expression",
                                                                                                "value" : {
                                                                                                  "op" : "&",
                                                                                                  "left" : {
                                                                                                    "type" : "field",
                                                                                                    "value" : ["ipv4", "srcAddr"]
                                                                                                  },
                                                                                                  "right" : {
                                                                                                    "type" : "hexstr",
                                                                                                    "value" : "0xffffffffffffffff"
                                                                                                  }
                                                                                                }
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0x20"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "dstAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x00000001ffffffff"
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffffffffffffffffffff"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0x10"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x0000000000000001ffff"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffffffffffffffffffffffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x10"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x00000000000000000001ffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffffffffffffffffffffffffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x8"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "field",
                                                "value" : ["ipv4", "protocol"]
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x000000000000000000000001ff"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffffffffffffffffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 103,
            "column" : 48,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? hdr.ipv4.dstAddr : track_meta.mDIpInTable"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.dst_ip_stage1"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_8"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 103,
            "column" : 8,
            "source_fragment" : "dst_ip_stage1.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? hdr.ipv4.dstAddr : track_meta.mDIpInTable))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_9"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t.l4_src_port"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_9"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_5"]
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "|",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "<<",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "|",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "|",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "|",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "<<",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "srcAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x20"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0xffffffffffffffff"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "field",
                                                                                            "value" : ["ipv4", "dstAddr"]
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0x00000001ffffffff"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x10"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffffffffffffffffffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x0000000000000001ffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x10"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffffffffffffffffffffffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x00000000000000000001ffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x8"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffffffffffffffffffffffffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "field",
                                            "value" : ["ipv4", "protocol"]
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0x000000000000000000000001ff"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 104,
            "column" : 50,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? metadata.l4_src_port : track_meta.mSPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_9"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_9"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "-",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["scalars", "tmp_5"]
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "|",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "<<",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "|",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "|",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "<<",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "|",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "<<",
                                                                                              "left" : {
                                                                                                "type" : "expression",
                                                                                                "value" : {
                                                                                                  "op" : "&",
                                                                                                  "left" : {
                                                                                                    "type" : "field",
                                                                                                    "value" : ["ipv4", "srcAddr"]
                                                                                                  },
                                                                                                  "right" : {
                                                                                                    "type" : "hexstr",
                                                                                                    "value" : "0xffffffffffffffff"
                                                                                                  }
                                                                                                }
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0x20"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "dstAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x00000001ffffffff"
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffffffffffffffffffff"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0x10"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x0000000000000001ffff"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffffffffffffffffffffffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x10"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x00000000000000000001ffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffffffffffffffffffffffffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x8"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "field",
                                                "value" : ["ipv4", "protocol"]
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x000000000000000000000001ff"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffffffffffffffffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 104,
            "column" : 50,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? metadata.l4_src_port : track_meta.mSPortInTable"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.src_port_stage1"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_9"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 104,
            "column" : 8,
            "source_fragment" : "src_port_stage1.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? metadata.l4_src_port : track_meta.mSPortInTable))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_10"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "metadata_t.l4_dst_port"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_10"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_5"]
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "|",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "<<",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "|",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "|",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "|",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "<<",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "srcAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x20"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0xffffffffffffffff"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "field",
                                                                                            "value" : ["ipv4", "dstAddr"]
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0x00000001ffffffff"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x10"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffffffffffffffffffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x0000000000000001ffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x10"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffffffffffffffffffffffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x00000000000000000001ffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x8"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffffffffffffffffffffffffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "field",
                                            "value" : ["ipv4", "protocol"]
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0x000000000000000000000001ff"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 105,
            "column" : 50,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? metadata.l4_dst_port : track_meta.mDPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_10"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_10"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "-",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["scalars", "tmp_5"]
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "|",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "<<",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "|",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "|",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "<<",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "|",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "<<",
                                                                                              "left" : {
                                                                                                "type" : "expression",
                                                                                                "value" : {
                                                                                                  "op" : "&",
                                                                                                  "left" : {
                                                                                                    "type" : "field",
                                                                                                    "value" : ["ipv4", "srcAddr"]
                                                                                                  },
                                                                                                  "right" : {
                                                                                                    "type" : "hexstr",
                                                                                                    "value" : "0xffffffffffffffff"
                                                                                                  }
                                                                                                }
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0x20"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "dstAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x00000001ffffffff"
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffffffffffffffffffff"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0x10"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x0000000000000001ffff"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffffffffffffffffffffffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x10"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x00000000000000000001ffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffffffffffffffffffffffffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x8"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "field",
                                                "value" : ["ipv4", "protocol"]
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x000000000000000000000001ff"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffffffffffffffffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 105,
            "column" : 50,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? metadata.l4_dst_port : track_meta.mDPortInTable"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.dst_port_stage1"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_10"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 105,
            "column" : 8,
            "source_fragment" : "dst_port_stage1.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? metadata.l4_dst_port : track_meta.mDPortInTable))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_11"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["ipv4", "protocol"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_11"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_5"]
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "|",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "<<",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "|",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "|",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "|",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "<<",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "srcAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x20"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0xffffffffffffffff"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "field",
                                                                                            "value" : ["ipv4", "dstAddr"]
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0x00000001ffffffff"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x10"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffffffffffffffffffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x0000000000000001ffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x10"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffffffffffffffffffffffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x00000000000000000001ffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x8"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffffffffffffffffffffffffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "field",
                                            "value" : ["ipv4", "protocol"]
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0x000000000000000000000001ff"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 106,
            "column" : 50,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? hdr.ipv4.protocol : track_meta.mProtoInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_11"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mProtoInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_11"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "-",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["scalars", "tmp_5"]
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "|",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "<<",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "|",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "|",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "<<",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "|",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "<<",
                                                                                              "left" : {
                                                                                                "type" : "expression",
                                                                                                "value" : {
                                                                                                  "op" : "&",
                                                                                                  "left" : {
                                                                                                    "type" : "field",
                                                                                                    "value" : ["ipv4", "srcAddr"]
                                                                                                  },
                                                                                                  "right" : {
                                                                                                    "type" : "hexstr",
                                                                                                    "value" : "0xffffffffffffffff"
                                                                                                  }
                                                                                                }
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0x20"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "dstAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x00000001ffffffff"
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffffffffffffffffffff"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0x10"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x0000000000000001ffff"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffffffffffffffffffffffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x10"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x00000000000000000001ffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffffffffffffffffffffffffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x8"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "field",
                                                "value" : ["ipv4", "protocol"]
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x000000000000000000000001ff"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffffffffffffffffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 106,
            "column" : 50,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? hdr.ipv4.protocol : track_meta.mProtoInTable"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.protocol_stage1"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_11"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 106,
            "column" : 8,
            "source_fragment" : "protocol_stage1.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? hdr.ipv4.protocol : track_meta.mProtoInTable))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_12"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000000000000000000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_12"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_5"]
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "|",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "<<",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "|",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "|",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "|",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "<<",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "srcAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x20"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0xffffffffffffffff"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "field",
                                                                                            "value" : ["ipv4", "dstAddr"]
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0x00000001ffffffff"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x10"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffffffffffffffffffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x0000000000000001ffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x10"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffffffffffffffffffffffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x00000000000000000001ffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x8"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffffffffffffffffffffffffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "field",
                                            "value" : ["ipv4", "protocol"]
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0x000000000000000000000001ff"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 109,
            "column" : 34,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? (bit<104>)0: track_meta.mKeyInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_12"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_5"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_12"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "-",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["scalars", "tmp_5"]
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "|",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "<<",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "|",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "|",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "<<",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "|",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "<<",
                                                                                              "left" : {
                                                                                                "type" : "expression",
                                                                                                "value" : {
                                                                                                  "op" : "&",
                                                                                                  "left" : {
                                                                                                    "type" : "field",
                                                                                                    "value" : ["ipv4", "srcAddr"]
                                                                                                  },
                                                                                                  "right" : {
                                                                                                    "type" : "hexstr",
                                                                                                    "value" : "0xffffffffffffffff"
                                                                                                  }
                                                                                                }
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0x20"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "dstAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x00000001ffffffff"
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffffffffffffffffffff"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0x10"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x0000000000000001ffff"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffffffffffffffffffffffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x10"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x00000000000000000001ffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffffffffffffffffffffffffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x8"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "field",
                                                "value" : ["ipv4", "protocol"]
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x000000000000000000000001ff"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffffffffffffffffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 109,
            "column" : 34,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? (bit<104>)0: track_meta.mKeyInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mKeyCarried"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_12"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 109,
            "column" : 8,
            "source_fragment" : "track_meta.mKeyCarried ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_13"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_13"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_5"]
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "|",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "<<",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "|",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "|",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "|",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "<<",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "srcAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x20"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0xffffffffffffffff"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "field",
                                                                                            "value" : ["ipv4", "dstAddr"]
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0x00000001ffffffff"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x10"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffffffffffffffffffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x0000000000000001ffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x10"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffffffffffffffffffffffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x00000000000000000001ffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x8"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffffffffffffffffffffffffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "field",
                                            "value" : ["ipv4", "protocol"]
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0x000000000000000000000001ff"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 110,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: track_meta.mCountInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_13"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mCountInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_13"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "-",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["scalars", "tmp_5"]
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "|",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "<<",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "|",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "|",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "<<",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "|",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "<<",
                                                                                              "left" : {
                                                                                                "type" : "expression",
                                                                                                "value" : {
                                                                                                  "op" : "&",
                                                                                                  "left" : {
                                                                                                    "type" : "field",
                                                                                                    "value" : ["ipv4", "srcAddr"]
                                                                                                  },
                                                                                                  "right" : {
                                                                                                    "type" : "hexstr",
                                                                                                    "value" : "0xffffffffffffffff"
                                                                                                  }
                                                                                                }
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0x20"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "dstAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x00000001ffffffff"
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffffffffffffffffffff"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0x10"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x0000000000000001ffff"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffffffffffffffffffffffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x10"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x00000000000000000001ffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffffffffffffffffffffffffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x8"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "field",
                                                "value" : ["ipv4", "protocol"]
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x000000000000000000000001ff"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffffffffffffffffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 110,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: track_meta.mCountInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mCountCarried"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_13"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 110,
            "column" : 8,
            "source_fragment" : "track_meta.mCountCarried ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_14"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_14"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_5"]
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "|",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "<<",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "|",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "|",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "|",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "<<",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "srcAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x20"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0xffffffffffffffff"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "field",
                                                                                            "value" : ["ipv4", "dstAddr"]
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0x00000001ffffffff"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x10"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffffffffffffffffffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x0000000000000001ffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x10"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffffffffffffffffffffffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x00000000000000000001ffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x8"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffffffffffffffffffffffffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "field",
                                            "value" : ["ipv4", "protocol"]
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0x000000000000000000000001ff"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 111,
            "column" : 34,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: track_meta.mSIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_14"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_14"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "-",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["scalars", "tmp_5"]
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "|",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "<<",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "|",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "|",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "<<",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "|",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "<<",
                                                                                              "left" : {
                                                                                                "type" : "expression",
                                                                                                "value" : {
                                                                                                  "op" : "&",
                                                                                                  "left" : {
                                                                                                    "type" : "field",
                                                                                                    "value" : ["ipv4", "srcAddr"]
                                                                                                  },
                                                                                                  "right" : {
                                                                                                    "type" : "hexstr",
                                                                                                    "value" : "0xffffffffffffffff"
                                                                                                  }
                                                                                                }
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0x20"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "dstAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x00000001ffffffff"
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffffffffffffffffffff"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0x10"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x0000000000000001ffff"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffffffffffffffffffffffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x10"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x00000000000000000001ffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffffffffffffffffffffffffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x8"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "field",
                                                "value" : ["ipv4", "protocol"]
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x000000000000000000000001ff"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffffffffffffffffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 111,
            "column" : 34,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: track_meta.mSIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mSIpCarried"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_14"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 111,
            "column" : 8,
            "source_fragment" : "track_meta.mSIpCarried ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_15"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_15"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_5"]
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "|",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "<<",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "|",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "|",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "|",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "<<",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "srcAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x20"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0xffffffffffffffff"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "field",
                                                                                            "value" : ["ipv4", "dstAddr"]
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0x00000001ffffffff"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x10"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffffffffffffffffffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x0000000000000001ffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x10"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffffffffffffffffffffffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x00000000000000000001ffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x8"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffffffffffffffffffffffffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "field",
                                            "value" : ["ipv4", "protocol"]
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0x000000000000000000000001ff"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 112,
            "column" : 34,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: track_meta.mDIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_15"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_15"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "-",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["scalars", "tmp_5"]
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "|",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "<<",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "|",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "|",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "<<",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "|",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "<<",
                                                                                              "left" : {
                                                                                                "type" : "expression",
                                                                                                "value" : {
                                                                                                  "op" : "&",
                                                                                                  "left" : {
                                                                                                    "type" : "field",
                                                                                                    "value" : ["ipv4", "srcAddr"]
                                                                                                  },
                                                                                                  "right" : {
                                                                                                    "type" : "hexstr",
                                                                                                    "value" : "0xffffffffffffffff"
                                                                                                  }
                                                                                                }
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0x20"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "dstAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x00000001ffffffff"
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffffffffffffffffffff"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0x10"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x0000000000000001ffff"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffffffffffffffffffffffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x10"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x00000000000000000001ffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffffffffffffffffffffffffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x8"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "field",
                                                "value" : ["ipv4", "protocol"]
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x000000000000000000000001ff"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffffffffffffffffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 112,
            "column" : 34,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: track_meta.mDIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mDIpCarried"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_15"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 112,
            "column" : 8,
            "source_fragment" : "track_meta.mDIpCarried ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_16"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x0000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_16"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_5"]
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "|",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "<<",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "|",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "|",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "|",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "<<",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "srcAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x20"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0xffffffffffffffff"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "field",
                                                                                            "value" : ["ipv4", "dstAddr"]
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0x00000001ffffffff"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x10"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffffffffffffffffffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x0000000000000001ffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x10"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffffffffffffffffffffffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x00000000000000000001ffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x8"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffffffffffffffffffffffffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "field",
                                            "value" : ["ipv4", "protocol"]
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0x000000000000000000000001ff"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 113,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: track_meta.mSPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_16"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_16"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "-",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["scalars", "tmp_5"]
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "|",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "<<",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "|",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "|",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "<<",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "|",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "<<",
                                                                                              "left" : {
                                                                                                "type" : "expression",
                                                                                                "value" : {
                                                                                                  "op" : "&",
                                                                                                  "left" : {
                                                                                                    "type" : "field",
                                                                                                    "value" : ["ipv4", "srcAddr"]
                                                                                                  },
                                                                                                  "right" : {
                                                                                                    "type" : "hexstr",
                                                                                                    "value" : "0xffffffffffffffff"
                                                                                                  }
                                                                                                }
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0x20"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "dstAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x00000001ffffffff"
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffffffffffffffffffff"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0x10"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x0000000000000001ffff"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffffffffffffffffffffffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x10"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x00000000000000000001ffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffffffffffffffffffffffffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x8"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "field",
                                                "value" : ["ipv4", "protocol"]
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x000000000000000000000001ff"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffffffffffffffffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 113,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: track_meta.mSPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mSPortCarried"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_16"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 113,
            "column" : 8,
            "source_fragment" : "track_meta.mSPortCarried ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_17"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x0000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_17"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_5"]
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "|",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "<<",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "|",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "|",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "|",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "<<",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "srcAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x20"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0xffffffffffffffff"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "field",
                                                                                            "value" : ["ipv4", "dstAddr"]
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0x00000001ffffffff"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x10"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffffffffffffffffffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x0000000000000001ffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x10"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffffffffffffffffffffffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x00000000000000000001ffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x8"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffffffffffffffffffffffffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "field",
                                            "value" : ["ipv4", "protocol"]
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0x000000000000000000000001ff"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 114,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: track_meta.mDPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_17"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_17"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "-",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["scalars", "tmp_5"]
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "|",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "<<",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "|",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "|",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "<<",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "|",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "<<",
                                                                                              "left" : {
                                                                                                "type" : "expression",
                                                                                                "value" : {
                                                                                                  "op" : "&",
                                                                                                  "left" : {
                                                                                                    "type" : "field",
                                                                                                    "value" : ["ipv4", "srcAddr"]
                                                                                                  },
                                                                                                  "right" : {
                                                                                                    "type" : "hexstr",
                                                                                                    "value" : "0xffffffffffffffff"
                                                                                                  }
                                                                                                }
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0x20"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "dstAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x00000001ffffffff"
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffffffffffffffffffff"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0x10"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x0000000000000001ffff"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffffffffffffffffffffffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x10"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x00000000000000000001ffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffffffffffffffffffffffffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x8"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "field",
                                                "value" : ["ipv4", "protocol"]
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x000000000000000000000001ff"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffffffffffffffffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 114,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: track_meta.mDPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mDPortCarried"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_17"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 114,
            "column" : 8,
            "source_fragment" : "track_meta.mDPortCarried ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_18"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_18"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_5"]
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "|",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "<<",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "|",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "|",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "|",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "<<",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "srcAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x20"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0xffffffffffffffff"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "field",
                                                                                            "value" : ["ipv4", "dstAddr"]
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0x00000001ffffffff"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x10"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffffffffffffffffffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x0000000000000001ffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x10"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffffffffffffffffffffffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x00000000000000000001ffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x8"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffffffffffffffffffffffffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "field",
                                            "value" : ["ipv4", "protocol"]
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0x000000000000000000000001ff"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 115,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: track_meta.mProtoInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_18"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mProtoInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_18"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "-",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["scalars", "tmp_5"]
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "|",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "<<",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "|",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "|",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "<<",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "|",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "<<",
                                                                                              "left" : {
                                                                                                "type" : "expression",
                                                                                                "value" : {
                                                                                                  "op" : "&",
                                                                                                  "left" : {
                                                                                                    "type" : "field",
                                                                                                    "value" : ["ipv4", "srcAddr"]
                                                                                                  },
                                                                                                  "right" : {
                                                                                                    "type" : "hexstr",
                                                                                                    "value" : "0xffffffffffffffff"
                                                                                                  }
                                                                                                }
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0x20"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffffffffffffffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["ipv4", "dstAddr"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffffffffffffffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x00000001ffffffff"
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffffffffffffffffffff"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0x10"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffffffffffffffffffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["scalars", "metadata_t.l4_src_port"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffffffffffffffffffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x0000000000000001ffff"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffffffffffffffffffffffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x10"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffffffffffffffffffffffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["scalars", "metadata_t.l4_dst_port"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffffffffffffffffffffffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x00000000000000000001ffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffffffffffffffffffffffffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x8"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffffffffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "field",
                                                "value" : ["ipv4", "protocol"]
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffffffffffffffffffffffffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x000000000000000000000001ff"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffffffffffffffffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 115,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: track_meta.mProtoInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mProtoCarried"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_18"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 115,
            "column" : 8,
            "source_fragment" : "track_meta.mProtoCarried ="
          }
        }
      ]
    },
    {
      "name" : "basic_tutorial_ingress.do_stage2",
      "id" : 5,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "calculation",
              "value" : "calc_0"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000020"
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 126,
            "column" : 8,
            "source_fragment" : "hash(track_meta.mIndex, HashAlgorithm.crc32, (bit<32>)0, {track_meta.mKeyCarried}, (bit<32>)32)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mKeyInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.flow_tracker_stage2"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 131,
            "column" : 8,
            "source_fragment" : "flow_tracker_stage2.read(track_meta.mKeyInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mCountInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.packet_counter_stage2"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 132,
            "column" : 8,
            "source_fragment" : "packet_counter_stage2.read(track_meta.mCountInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mValid"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.valid_bit_stage2"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 133,
            "column" : 8,
            "source_fragment" : "valid_bit_stage2.read(track_meta.mValid, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mSIpInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.src_ip_stage2"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 134,
            "column" : 8,
            "source_fragment" : "src_ip_stage2.read(track_meta.mSIpInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mDIpInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.dst_ip_stage2"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 135,
            "column" : 8,
            "source_fragment" : "dst_ip_stage2.read(track_meta.mDIpInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mSPortInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.src_port_stage2"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 136,
            "column" : 8,
            "source_fragment" : "src_port_stage2.read(track_meta.mSPortInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mDPortInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.dst_port_stage2"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 137,
            "column" : 8,
            "source_fragment" : "dst_port_stage2.read(track_meta.mDPortInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mProtoInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.protocol_stage2"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 138,
            "column" : 8,
            "source_fragment" : "protocol_stage2.read(track_meta.mProtoInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_19"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_19"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["track_meta_0", "mCountInTable"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "count_threshold_0"]
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 139,
            "column" : 33,
            "source_fragment" : "(track_meta.mCountInTable == count_threshold) ? (bit<1>) 1 : (bit<1>) 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_19"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_19"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["scalars", "count_threshold_0"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 139,
            "column" : 33,
            "source_fragment" : "(track_meta.mCountInTable == count_threshold) ? (bit<1>) 1 : (bit<1>) 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t.overflow_flag"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_19"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 139,
            "column" : 8,
            "source_fragment" : "metadata.overflow_flag ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_20"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_20"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_19"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 140,
            "column" : 26,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<32>)0 : track_meta.mSIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_20"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_20"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_19"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 140,
            "column" : 26,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<32>)0 : track_meta.mSIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t.src_ip"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_20"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 140,
            "column" : 8,
            "source_fragment" : "metadata.src_ip ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_21"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_21"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_19"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 141,
            "column" : 26,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<32>)0 : track_meta.mDIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_21"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_21"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_19"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 141,
            "column" : 26,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<32>)0 : track_meta.mDIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t.dst_ip"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_21"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 141,
            "column" : 8,
            "source_fragment" : "metadata.dst_ip ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_22"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x0000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_22"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_19"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 142,
            "column" : 28,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<16>)0 : track_meta.mSPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_22"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_22"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_19"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 142,
            "column" : 28,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<16>)0 : track_meta.mSPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t.src_port"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_22"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 142,
            "column" : 8,
            "source_fragment" : "metadata.src_port ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_23"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x0000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_23"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_19"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 143,
            "column" : 28,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<16>)0 : track_meta.mDPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_23"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_23"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_19"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 143,
            "column" : 28,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<16>)0 : track_meta.mDPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t.dst_port"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_23"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 143,
            "column" : 8,
            "source_fragment" : "metadata.dst_port ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_24"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_24"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_19"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 144,
            "column" : 25,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<8>)0 : track_meta.mProtoInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_24"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mProtoInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_24"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_19"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 144,
            "column" : 25,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<8>)0 : track_meta.mProtoInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t.proto"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_24"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 144,
            "column" : 8,
            "source_fragment" : "metadata.proto ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_25"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mKeyCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_25"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["track_meta_0", "mValid"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 147,
            "column" : 33,
            "source_fragment" : "(track_meta.mValid == 0)? track_meta.mKeyCarried : track_meta.mKeyInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_25"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mKeyInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_25"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mValid"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 147,
            "column" : 33,
            "source_fragment" : "(track_meta.mValid == 0)? track_meta.mKeyCarried : track_meta.mKeyInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mKeyInTable"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_25"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 147,
            "column" : 8,
            "source_fragment" : "track_meta.mKeyInTable ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_26"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000000000000000000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_26"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["track_meta_0", "mValid"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 148,
            "column" : 32,
            "source_fragment" : "(track_meta.mValid == 0)? 0 : track_meta.mKeyInTable - track_meta.mKeyCarried"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_26"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_25"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mKeyCarried"]
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffffffffffffffffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_26"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mValid"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 148,
            "column" : 32,
            "source_fragment" : "(track_meta.mValid == 0)? 0 : track_meta.mKeyInTable - track_meta.mKeyCarried"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mSwapSpace"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_26"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 148,
            "column" : 8,
            "source_fragment" : "track_meta.mSwapSpace ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_27"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_25"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_27"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_26"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 151,
            "column" : 54,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mKeyInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_28"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mKeyCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_28"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 151,
            "column" : 110,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_28"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_25"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_28"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 151,
            "column" : 110,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_27"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_28"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_27"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_26"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 151,
            "column" : 54,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mKeyInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.flow_tracker_stage2"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_27"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 151,
            "column" : 8,
            "source_fragment" : "flow_tracker_stage2.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? track_meta.mKeyInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable)))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_29"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_29"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_26"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 152,
            "column" : 56,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mCountInTable + track_meta.mCountCarried : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_30"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mCountCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_30"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 152,
            "column" : 141,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_30"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mCountInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_30"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 152,
            "column" : 141,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_29"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_30"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_29"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_26"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 152,
            "column" : 56,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mCountInTable + track_meta.mCountCarried : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.packet_counter_stage2"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_29"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 152,
            "column" : 8,
            "source_fragment" : "packet_counter_stage2.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? track_meta.mCountInTable + track_meta.mCountCarried : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable)))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_32"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_32"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mValid"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mKeyCarried"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 153,
            "column" : 79,
            "source_fragment" : "(track_meta.mKeyCarried == 0) ? (bit<1>)0 : (bit<1>)1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_32"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_32"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mValid"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mKeyCarried"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 153,
            "column" : 79,
            "source_fragment" : "(track_meta.mKeyCarried == 0) ? (bit<1>)0 : (bit<1>)1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_31"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_32"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_31"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["track_meta_0", "mValid"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 153,
            "column" : 51,
            "source_fragment" : "(track_meta.mValid == 0) ? ((track_meta.mKeyCarried == 0) ? (bit<1>)0 : (bit<1>)1) : (bit<1>)1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_31"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_31"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mValid"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 153,
            "column" : 51,
            "source_fragment" : "(track_meta.mValid == 0) ? ((track_meta.mKeyCarried == 0) ? (bit<1>)0 : (bit<1>)1) : (bit<1>)1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.valid_bit_stage2"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_31"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 153,
            "column" : 8,
            "source_fragment" : "valid_bit_stage2.write(track_meta.mIndex, ((track_meta.mValid == 0) ? ((track_meta.mKeyCarried == 0) ? (bit<1>)0 : (bit<1>)1) : (bit<1>)1))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_33"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_33"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_26"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 155,
            "column" : 48,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mSIpInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_34"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSIpCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_34"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 155,
            "column" : 104,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_34"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_34"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 155,
            "column" : 104,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_33"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_34"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_33"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_26"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 155,
            "column" : 48,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mSIpInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.src_ip_stage2"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_33"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 155,
            "column" : 8,
            "source_fragment" : "src_ip_stage2.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? track_meta.mSIpInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable)))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_35"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_35"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_26"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 156,
            "column" : 48,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mDIpInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_36"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDIpCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_36"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 156,
            "column" : 104,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_36"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_36"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 156,
            "column" : 104,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_35"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_36"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_35"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_26"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 156,
            "column" : 48,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mDIpInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.dst_ip_stage2"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_35"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 156,
            "column" : 8,
            "source_fragment" : "dst_ip_stage2.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? track_meta.mDIpInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable)))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_37"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_37"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_26"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 157,
            "column" : 50,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mSPortInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_38"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSPortCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_38"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 157,
            "column" : 108,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_38"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_38"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 157,
            "column" : 108,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_37"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_38"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_37"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_26"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 157,
            "column" : 50,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mSPortInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.src_port_stage2"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_37"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 157,
            "column" : 8,
            "source_fragment" : "src_port_stage2.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? track_meta.mSPortInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable)))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_39"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_39"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_26"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 158,
            "column" : 50,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mDPortInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_40"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDPortCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_40"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 158,
            "column" : 108,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_40"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_40"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 158,
            "column" : 108,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_39"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_40"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_39"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_26"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 158,
            "column" : 50,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mDPortInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.dst_port_stage2"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_39"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 158,
            "column" : 8,
            "source_fragment" : "dst_port_stage2.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? track_meta.mDPortInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable)))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_41"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mProtoInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_41"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_26"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 159,
            "column" : 50,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mProtoInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_42"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mProtoCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_42"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 159,
            "column" : 108,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_42"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mProtoInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_42"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 159,
            "column" : 108,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_41"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_42"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_41"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_26"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 159,
            "column" : 50,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mProtoInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.protocol_stage2"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_41"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 159,
            "column" : 8,
            "source_fragment" : "protocol_stage2.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? track_meta.mProtoInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable)))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_43"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000000000000000000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_43"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_26"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 162,
            "column" : 34,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? (bit<104>)0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_44"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mKeyCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_44"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 162,
            "column" : 79,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_44"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_25"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_44"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 162,
            "column" : 79,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_43"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_44"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_43"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_26"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 162,
            "column" : 34,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? (bit<104>)0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mKeyCarried"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_43"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 162,
            "column" : 8,
            "source_fragment" : "track_meta.mKeyCarried ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_45"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_45"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_26"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 163,
            "column" : 34,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_46"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSIpCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_46"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 163,
            "column" : 69,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_46"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_46"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 163,
            "column" : 69,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_45"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_46"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_45"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_26"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 163,
            "column" : 34,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mSIpCarried"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_45"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 163,
            "column" : 8,
            "source_fragment" : "track_meta.mSIpCarried ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_47"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_47"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_26"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 164,
            "column" : 34,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_48"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDIpCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_48"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 164,
            "column" : 69,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_48"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_48"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 164,
            "column" : 69,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_47"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_48"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_47"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_26"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 164,
            "column" : 34,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mDIpCarried"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_47"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 164,
            "column" : 8,
            "source_fragment" : "track_meta.mDIpCarried ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_49"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x0000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_49"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_26"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 165,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_50"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSPortCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_50"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 165,
            "column" : 71,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_50"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_50"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 165,
            "column" : 71,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_49"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_50"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_49"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_26"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 165,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mSPortCarried"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_49"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 165,
            "column" : 8,
            "source_fragment" : "track_meta.mSPortCarried ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_51"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x0000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_51"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_26"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 166,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_52"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDPortCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_52"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 166,
            "column" : 71,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_52"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_52"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 166,
            "column" : 71,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_51"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_52"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_51"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_26"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 166,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mDPortCarried"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_51"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 166,
            "column" : 8,
            "source_fragment" : "track_meta.mDPortCarried ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_53"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_53"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_26"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 167,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_54"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mProtoCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_54"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 167,
            "column" : 71,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_54"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mProtoInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_54"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 167,
            "column" : 71,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_53"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_54"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_53"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_26"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 167,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mProtoCarried"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_53"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 167,
            "column" : 8,
            "source_fragment" : "track_meta.mProtoCarried ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_55"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_55"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_26"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 168,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_56"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mCountCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_56"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 168,
            "column" : 71,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_56"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mCountInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_56"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_26"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 168,
            "column" : 71,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_55"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_56"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_55"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_26"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 168,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mCountCarried"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_55"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 168,
            "column" : 8,
            "source_fragment" : "track_meta.mCountCarried ="
          }
        }
      ]
    },
    {
      "name" : "basic_tutorial_ingress.do_stage3",
      "id" : 6,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "calculation",
              "value" : "calc_1"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000020"
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 179,
            "column" : 8,
            "source_fragment" : "hash(track_meta.mIndex, HashAlgorithm.crc32, (bit<32>)0, {track_meta.mKeyCarried}, (bit<32>)32)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mKeyInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.flow_tracker_stage3"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 183,
            "column" : 8,
            "source_fragment" : "flow_tracker_stage3.read(track_meta.mKeyInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mCountInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.packet_counter_stage3"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 184,
            "column" : 8,
            "source_fragment" : "packet_counter_stage3.read(track_meta.mCountInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mValid"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.valid_bit_stage3"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 185,
            "column" : 8,
            "source_fragment" : "valid_bit_stage3.read(track_meta.mValid, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mSIpInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.src_ip_stage3"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 186,
            "column" : 8,
            "source_fragment" : "src_ip_stage3.read(track_meta.mSIpInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mDIpInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.dst_ip_stage3"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 187,
            "column" : 8,
            "source_fragment" : "dst_ip_stage3.read(track_meta.mDIpInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mSPortInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.src_port_stage3"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 188,
            "column" : 8,
            "source_fragment" : "src_port_stage3.read(track_meta.mSPortInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mDPortInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.dst_port_stage3"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 189,
            "column" : 8,
            "source_fragment" : "dst_port_stage3.read(track_meta.mDPortInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mProtoInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.protocol_stage3"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 190,
            "column" : 8,
            "source_fragment" : "protocol_stage3.read(track_meta.mProtoInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_57"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_57"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["track_meta_0", "mCountInTable"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "count_threshold_0"]
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 191,
            "column" : 33,
            "source_fragment" : "(track_meta.mCountInTable == count_threshold) ? (bit<1>) 1 : (bit<1>) 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_57"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_57"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["scalars", "count_threshold_0"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 191,
            "column" : 33,
            "source_fragment" : "(track_meta.mCountInTable == count_threshold) ? (bit<1>) 1 : (bit<1>) 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t.overflow_flag"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_57"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 191,
            "column" : 8,
            "source_fragment" : "metadata.overflow_flag ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_58"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_58"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_57"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 192,
            "column" : 26,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<32>)0 : track_meta.mSIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_58"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_58"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_57"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 192,
            "column" : 26,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<32>)0 : track_meta.mSIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t.src_ip"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_58"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 192,
            "column" : 8,
            "source_fragment" : "metadata.src_ip ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_59"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_59"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_57"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 193,
            "column" : 26,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<32>)0 : track_meta.mDIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_59"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_59"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_57"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 193,
            "column" : 26,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<32>)0 : track_meta.mDIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t.dst_ip"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_59"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 193,
            "column" : 8,
            "source_fragment" : "metadata.dst_ip ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_60"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x0000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_60"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_57"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 194,
            "column" : 28,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<16>)0 : track_meta.mSPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_60"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_60"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_57"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 194,
            "column" : 28,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<16>)0 : track_meta.mSPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t.src_port"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_60"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 194,
            "column" : 8,
            "source_fragment" : "metadata.src_port ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_61"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x0000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_61"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_57"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 195,
            "column" : 28,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<16>)0 : track_meta.mDPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_61"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_61"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_57"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 195,
            "column" : 28,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<16>)0 : track_meta.mDPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t.dst_port"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_61"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 195,
            "column" : 8,
            "source_fragment" : "metadata.dst_port ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_62"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_62"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_57"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 196,
            "column" : 25,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<8>)0 : track_meta.mProtoInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_62"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mProtoInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_62"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_57"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 196,
            "column" : 25,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<8>)0 : track_meta.mProtoInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t.proto"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_62"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 196,
            "column" : 8,
            "source_fragment" : "metadata.proto ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_63"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mKeyCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_63"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["track_meta_0", "mValid"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 199,
            "column" : 33,
            "source_fragment" : "(track_meta.mValid == 0)? track_meta.mKeyCarried : track_meta.mKeyInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_63"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mKeyInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_63"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mValid"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 199,
            "column" : 33,
            "source_fragment" : "(track_meta.mValid == 0)? track_meta.mKeyCarried : track_meta.mKeyInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mKeyInTable"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_63"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 199,
            "column" : 8,
            "source_fragment" : "track_meta.mKeyInTable ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_64"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000000000000000000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_64"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["track_meta_0", "mValid"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 200,
            "column" : 32,
            "source_fragment" : "(track_meta.mValid == 0)? 0 : track_meta.mKeyInTable - track_meta.mKeyCarried"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_64"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_63"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mKeyCarried"]
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffffffffffffffffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_64"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mValid"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 200,
            "column" : 32,
            "source_fragment" : "(track_meta.mValid == 0)? 0 : track_meta.mKeyInTable - track_meta.mKeyCarried"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mSwapSpace"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_64"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 200,
            "column" : 8,
            "source_fragment" : "track_meta.mSwapSpace ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_65"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_63"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_65"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_64"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 203,
            "column" : 54,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mKeyInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_66"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mKeyCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_66"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 203,
            "column" : 110,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_66"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_63"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_66"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 203,
            "column" : 110,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_65"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_66"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_65"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_64"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 203,
            "column" : 54,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mKeyInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.flow_tracker_stage3"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_65"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 203,
            "column" : 8,
            "source_fragment" : "flow_tracker_stage3.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? track_meta.mKeyInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable)))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_67"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_67"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_64"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 204,
            "column" : 56,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mCountInTable + track_meta.mCountCarried : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_68"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mCountCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_68"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 204,
            "column" : 141,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_68"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mCountInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_68"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 204,
            "column" : 141,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_67"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_68"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_67"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_64"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 204,
            "column" : 56,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mCountInTable + track_meta.mCountCarried : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.packet_counter_stage3"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_67"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 204,
            "column" : 8,
            "source_fragment" : "packet_counter_stage3.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? track_meta.mCountInTable + track_meta.mCountCarried : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable)))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_70"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_70"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mValid"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mKeyCarried"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 205,
            "column" : 79,
            "source_fragment" : "(track_meta.mKeyCarried == 0) ? (bit<1>)0 : 1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_70"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_70"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mValid"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mKeyCarried"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 205,
            "column" : 79,
            "source_fragment" : "(track_meta.mKeyCarried == 0) ? (bit<1>)0 : 1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_69"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_70"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_69"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["track_meta_0", "mValid"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 205,
            "column" : 51,
            "source_fragment" : "(track_meta.mValid == 0) ? ((track_meta.mKeyCarried == 0) ? (bit<1>)0 : 1) : (bit<1>)1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_69"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_69"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mValid"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 205,
            "column" : 51,
            "source_fragment" : "(track_meta.mValid == 0) ? ((track_meta.mKeyCarried == 0) ? (bit<1>)0 : 1) : (bit<1>)1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.valid_bit_stage3"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_69"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 205,
            "column" : 8,
            "source_fragment" : "valid_bit_stage3.write(track_meta.mIndex, ((track_meta.mValid == 0) ? ((track_meta.mKeyCarried == 0) ? (bit<1>)0 : 1) : (bit<1>)1))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_71"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_71"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_64"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 207,
            "column" : 48,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mSIpInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_72"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSIpCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_72"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 207,
            "column" : 104,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_72"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_72"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 207,
            "column" : 104,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_71"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_72"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_71"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_64"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 207,
            "column" : 48,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mSIpInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.src_ip_stage3"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_71"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 207,
            "column" : 8,
            "source_fragment" : "src_ip_stage3.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? track_meta.mSIpInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable)))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_73"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_73"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_64"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 208,
            "column" : 48,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mDIpInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_74"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDIpCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_74"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 208,
            "column" : 104,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_74"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_74"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 208,
            "column" : 104,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_73"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_74"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_73"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_64"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 208,
            "column" : 48,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mDIpInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.dst_ip_stage3"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_73"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 208,
            "column" : 8,
            "source_fragment" : "dst_ip_stage3.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? track_meta.mDIpInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable)))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_75"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_75"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_64"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 209,
            "column" : 50,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mSPortInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_76"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSPortCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_76"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 209,
            "column" : 108,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_76"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_76"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 209,
            "column" : 108,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_75"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_76"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_75"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_64"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 209,
            "column" : 50,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mSPortInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.src_port_stage3"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_75"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 209,
            "column" : 8,
            "source_fragment" : "src_port_stage3.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? track_meta.mSPortInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable)))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_77"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_77"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_64"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 210,
            "column" : 50,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mDPortInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_78"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDPortCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_78"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 210,
            "column" : 108,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_78"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_78"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 210,
            "column" : 108,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_77"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_78"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_77"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_64"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 210,
            "column" : 50,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mDPortInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.dst_port_stage3"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_77"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 210,
            "column" : 8,
            "source_fragment" : "dst_port_stage3.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? track_meta.mDPortInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable)))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_79"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mProtoInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_79"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_64"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 211,
            "column" : 50,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mProtoInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_80"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mProtoCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_80"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 211,
            "column" : 108,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_80"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mProtoInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_80"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 211,
            "column" : 108,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_79"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_80"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_79"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_64"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 211,
            "column" : 50,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mProtoInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.protocol_stage3"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_79"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 211,
            "column" : 8,
            "source_fragment" : "protocol_stage3.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? track_meta.mProtoInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable)))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_81"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000000000000000000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_81"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_64"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 214,
            "column" : 34,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? (bit<104>)0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_82"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mKeyCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_82"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 214,
            "column" : 79,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_82"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_63"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_82"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 214,
            "column" : 79,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_81"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_82"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_81"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_64"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 214,
            "column" : 34,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? (bit<104>)0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mKeyCarried"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_81"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 214,
            "column" : 8,
            "source_fragment" : "track_meta.mKeyCarried ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_83"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_83"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_64"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 215,
            "column" : 34,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_84"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSIpCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_84"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 215,
            "column" : 69,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_84"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_84"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 215,
            "column" : 69,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_83"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_84"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_83"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_64"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 215,
            "column" : 34,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mSIpCarried"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_83"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 215,
            "column" : 8,
            "source_fragment" : "track_meta.mSIpCarried ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_85"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_85"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_64"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 216,
            "column" : 34,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_86"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDIpCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_86"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 216,
            "column" : 69,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_86"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_86"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 216,
            "column" : 69,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_85"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_86"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_85"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_64"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 216,
            "column" : 34,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mDIpCarried"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_85"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 216,
            "column" : 8,
            "source_fragment" : "track_meta.mDIpCarried ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_87"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x0000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_87"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_64"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 217,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_88"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSPortCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_88"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 217,
            "column" : 71,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_88"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_88"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 217,
            "column" : 71,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_87"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_88"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_87"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_64"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 217,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mSPortCarried"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_87"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 217,
            "column" : 8,
            "source_fragment" : "track_meta.mSPortCarried ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_89"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x0000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_89"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_64"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 218,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_90"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDPortCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_90"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 218,
            "column" : 71,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_90"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_90"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 218,
            "column" : 71,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_89"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_90"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_89"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_64"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 218,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mDPortCarried"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_89"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 218,
            "column" : 8,
            "source_fragment" : "track_meta.mDPortCarried ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_91"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_91"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_64"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 219,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_92"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mProtoCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_92"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 219,
            "column" : 71,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_92"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mProtoInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_92"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 219,
            "column" : 71,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_91"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_92"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_91"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_64"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 219,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mProtoCarried"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_91"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 219,
            "column" : 8,
            "source_fragment" : "track_meta.mProtoCarried ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_93"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_93"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_64"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 220,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_94"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mCountCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_94"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 220,
            "column" : 71,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_94"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mCountInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_94"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_64"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 220,
            "column" : 71,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_93"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_94"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_93"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_64"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 220,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mCountCarried"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_93"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 220,
            "column" : 8,
            "source_fragment" : "track_meta.mCountCarried ="
          }
        }
      ]
    },
    {
      "name" : "basic_tutorial_ingress.do_stage4",
      "id" : 7,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "calculation",
              "value" : "calc_2"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000020"
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 231,
            "column" : 8,
            "source_fragment" : "hash(track_meta.mIndex, HashAlgorithm.crc32, (bit<32>)0, {track_meta.mKeyCarried}, (bit<32>)32)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mKeyInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.flow_tracker_stage4"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 235,
            "column" : 8,
            "source_fragment" : "flow_tracker_stage4.read(track_meta.mKeyInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mCountInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.packet_counter_stage4"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 236,
            "column" : 8,
            "source_fragment" : "packet_counter_stage4.read(track_meta.mCountInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mValid"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.valid_bit_stage4"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 237,
            "column" : 8,
            "source_fragment" : "valid_bit_stage4.read(track_meta.mValid, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mSIpInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.src_ip_stage4"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 238,
            "column" : 8,
            "source_fragment" : "src_ip_stage4.read(track_meta.mSIpInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mDIpInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.dst_ip_stage4"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 239,
            "column" : 8,
            "source_fragment" : "dst_ip_stage4.read(track_meta.mDIpInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mSPortInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.src_port_stage4"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 240,
            "column" : 8,
            "source_fragment" : "src_port_stage4.read(track_meta.mSPortInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mDPortInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.dst_port_stage4"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 241,
            "column" : 8,
            "source_fragment" : "dst_port_stage4.read(track_meta.mDPortInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mProtoInTable"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.protocol_stage4"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 242,
            "column" : 8,
            "source_fragment" : "protocol_stage4.read(track_meta.mProtoInTable, track_meta.mIndex)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_95"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_95"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["track_meta_0", "mCountInTable"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "count_threshold_0"]
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 243,
            "column" : 33,
            "source_fragment" : "(track_meta.mCountInTable == count_threshold) ? (bit<1>) 1 : (bit<1>) 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_95"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_95"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["scalars", "count_threshold_0"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 243,
            "column" : 33,
            "source_fragment" : "(track_meta.mCountInTable == count_threshold) ? (bit<1>) 1 : (bit<1>) 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t.overflow_flag"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_95"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 243,
            "column" : 8,
            "source_fragment" : "metadata.overflow_flag ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_96"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_96"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_95"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 244,
            "column" : 26,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<32>)0 : track_meta.mSIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_96"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_96"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_95"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 244,
            "column" : 26,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<32>)0 : track_meta.mSIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t.src_ip"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_96"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 244,
            "column" : 8,
            "source_fragment" : "metadata.src_ip ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_97"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_97"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_95"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 245,
            "column" : 26,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<32>)0 : track_meta.mDIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_97"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_97"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_95"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 245,
            "column" : 26,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<32>)0 : track_meta.mDIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t.dst_ip"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_97"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 245,
            "column" : 8,
            "source_fragment" : "metadata.dst_ip ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_98"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x0000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_98"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_95"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 246,
            "column" : 28,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<16>)0 : track_meta.mSPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_98"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_98"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_95"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 246,
            "column" : 28,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<16>)0 : track_meta.mSPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t.src_port"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_98"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 246,
            "column" : 8,
            "source_fragment" : "metadata.src_port ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_99"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x0000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_99"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_95"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 247,
            "column" : 28,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<16>)0 : track_meta.mDPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_99"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_99"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_95"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 247,
            "column" : 28,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<16>)0 : track_meta.mDPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t.dst_port"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_99"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 247,
            "column" : 8,
            "source_fragment" : "metadata.dst_port ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_100"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_100"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_95"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 248,
            "column" : 25,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<8>)0 : track_meta.mProtoInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_100"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mProtoInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_100"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_95"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 248,
            "column" : 25,
            "source_fragment" : "(metadata.overflow_flag == (bit<1>) 0)? (bit<8>)0 : track_meta.mProtoInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t.proto"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_100"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 248,
            "column" : 8,
            "source_fragment" : "metadata.proto ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_101"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mKeyCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_101"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["track_meta_0", "mValid"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 251,
            "column" : 33,
            "source_fragment" : "(track_meta.mValid == 0)? track_meta.mKeyCarried : track_meta.mKeyInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_101"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mKeyInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_101"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mValid"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 251,
            "column" : 33,
            "source_fragment" : "(track_meta.mValid == 0)? track_meta.mKeyCarried : track_meta.mKeyInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mKeyInTable"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_101"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 251,
            "column" : 8,
            "source_fragment" : "track_meta.mKeyInTable ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_102"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000000000000000000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_102"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["track_meta_0", "mValid"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 252,
            "column" : 32,
            "source_fragment" : "(track_meta.mValid == 0)? 0 : track_meta.mKeyInTable - track_meta.mKeyCarried"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_102"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_101"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mKeyCarried"]
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffffffffffffffffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_102"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mValid"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 252,
            "column" : 32,
            "source_fragment" : "(track_meta.mValid == 0)? 0 : track_meta.mKeyInTable - track_meta.mKeyCarried"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["track_meta_0", "mSwapSpace"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_102"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 252,
            "column" : 8,
            "source_fragment" : "track_meta.mSwapSpace ="
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_103"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_101"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_103"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_102"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 255,
            "column" : 54,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mKeyInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_104"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mKeyCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_104"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 255,
            "column" : 110,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_104"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_101"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_104"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 255,
            "column" : 110,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_103"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_104"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_103"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_102"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 255,
            "column" : 54,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mKeyInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.flow_tracker_stage4"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_103"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 255,
            "column" : 8,
            "source_fragment" : "flow_tracker_stage4.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? track_meta.mKeyInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable)))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_105"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_105"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_102"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 256,
            "column" : 56,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mCountInTable + track_meta.mCountCarried : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_106"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mCountCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_106"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 256,
            "column" : 141,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_106"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mCountInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_106"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 256,
            "column" : 141,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_105"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_106"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_105"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_102"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 256,
            "column" : 56,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mCountInTable + track_meta.mCountCarried : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.packet_counter_stage4"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_105"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 256,
            "column" : 8,
            "source_fragment" : "packet_counter_stage4.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? track_meta.mCountInTable + track_meta.mCountCarried : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable)))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_108"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_108"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mValid"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mKeyCarried"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 257,
            "column" : 79,
            "source_fragment" : "(track_meta.mKeyCarried == 0) ? (bit<1>)0 : 1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_108"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_108"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mValid"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mKeyCarried"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 257,
            "column" : 79,
            "source_fragment" : "(track_meta.mKeyCarried == 0) ? (bit<1>)0 : 1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_107"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_108"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_107"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["track_meta_0", "mValid"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 257,
            "column" : 51,
            "source_fragment" : "(track_meta.mValid == 0) ? ((track_meta.mKeyCarried == 0) ? (bit<1>)0 : 1) : (bit<1>)1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_107"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_107"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mValid"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 257,
            "column" : 51,
            "source_fragment" : "(track_meta.mValid == 0) ? ((track_meta.mKeyCarried == 0) ? (bit<1>)0 : 1) : (bit<1>)1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.valid_bit_stage4"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_107"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 257,
            "column" : 8,
            "source_fragment" : "valid_bit_stage4.write(track_meta.mIndex, ((track_meta.mValid == 0) ? ((track_meta.mKeyCarried == 0) ? (bit<1>)0 : 1) : (bit<1>)1))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_109"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_109"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_102"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 259,
            "column" : 48,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mSIpInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_110"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSIpCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_110"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 259,
            "column" : 104,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_110"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_110"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 259,
            "column" : 104,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_109"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_110"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_109"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_102"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 259,
            "column" : 48,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mSIpInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.src_ip_stage4"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_109"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 259,
            "column" : 8,
            "source_fragment" : "src_ip_stage4.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? track_meta.mSIpInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable)))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_111"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_111"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_102"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 260,
            "column" : 48,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mDIpInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_112"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDIpCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_112"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 260,
            "column" : 104,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_112"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_112"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 260,
            "column" : 104,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_111"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_112"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_111"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_102"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 260,
            "column" : 48,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mDIpInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.dst_ip_stage4"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_111"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 260,
            "column" : 8,
            "source_fragment" : "dst_ip_stage4.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? track_meta.mDIpInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable)))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_113"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_113"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_102"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 261,
            "column" : 50,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mSPortInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_114"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSPortCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_114"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 261,
            "column" : 108,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_114"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_114"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 261,
            "column" : 108,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_113"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_114"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_113"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_102"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 261,
            "column" : 50,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mSPortInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.src_port_stage4"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_113"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 261,
            "column" : 8,
            "source_fragment" : "src_port_stage4.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? track_meta.mSPortInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable)))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_115"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_115"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_102"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 262,
            "column" : 50,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mDPortInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_116"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDPortCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_116"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 262,
            "column" : 108,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_116"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_116"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 262,
            "column" : 108,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_115"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_116"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_115"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_102"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 262,
            "column" : 50,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mDPortInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.dst_port_stage4"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_115"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 262,
            "column" : 8,
            "source_fragment" : "dst_port_stage4.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? track_meta.mDPortInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable)))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_117"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mProtoInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_117"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_102"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 263,
            "column" : 50,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mProtoInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_118"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mProtoCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_118"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 263,
            "column" : 108,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_118"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mProtoInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_118"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 263,
            "column" : 108,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_117"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_118"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_117"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_102"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 263,
            "column" : 50,
            "source_fragment" : "(track_meta.mSwapSpace == 0)? track_meta.mProtoInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.protocol_stage4"
            },
            {
              "type" : "field",
              "value" : ["track_meta_0", "mIndex"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_117"]
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 263,
            "column" : 8,
            "source_fragment" : "protocol_stage4.write(track_meta.mIndex, ((track_meta.mSwapSpace == 0)? track_meta.mProtoInTable : ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable)))"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_119"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000000000000000000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_119"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_102"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 266,
            "column" : 34,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? (bit<104>)0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_120"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mKeyCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_120"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 266,
            "column" : 79,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_120"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_101"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_120"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 266,
            "column" : 79,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_119"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_120"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_119"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_102"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 266,
            "column" : 34,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? (bit<104>)0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mKeyCarried : track_meta.mKeyInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_121"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_121"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_102"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 267,
            "column" : 34,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_122"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSIpCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_122"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 267,
            "column" : 69,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_122"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_122"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 267,
            "column" : 69,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_121"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_122"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_121"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_102"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 267,
            "column" : 34,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSIpCarried : track_meta.mSIpInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_123"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_123"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_102"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 268,
            "column" : 34,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_124"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDIpCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_124"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 268,
            "column" : 69,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_124"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDIpInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_124"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 268,
            "column" : 69,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_123"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_124"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_123"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_102"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 268,
            "column" : 34,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDIpCarried : track_meta.mDIpInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_125"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x0000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_125"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_102"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 269,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_126"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSPortCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_126"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 269,
            "column" : 71,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_126"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mSPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_126"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 269,
            "column" : 71,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_125"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_126"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_125"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_102"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 269,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mSPortCarried : track_meta.mSPortInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_127"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x0000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_127"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_102"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 270,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_128"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDPortCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_128"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 270,
            "column" : 71,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_128"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mDPortInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_128"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 270,
            "column" : 71,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_127"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_128"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_127"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_102"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 270,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mDPortCarried : track_meta.mDPortInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_129"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_129"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_102"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 271,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_130"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mProtoCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_130"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 271,
            "column" : 71,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_130"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mProtoInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_130"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 271,
            "column" : 71,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_129"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_130"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_129"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_102"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 271,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mProtoCarried : track_meta.mProtoInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_131"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00000000"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_131"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_102"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000000000000000000000"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 272,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_132"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mCountCarried"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_132"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountInTable"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["track_meta_0", "mCountCarried"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 272,
            "column" : 71,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_132"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["track_meta_0", "mCountInTable"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_132"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "tmp_102"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000000000000000000"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "not",
                          "left" : null,
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<",
                              "left" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountInTable"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["track_meta_0", "mCountCarried"]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 272,
            "column" : 71,
            "source_fragment" : "(track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_131"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_132"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_131"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "tmp_102"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000000000000000"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 272,
            "column" : 36,
            "source_fragment" : "(track_meta.mSwapSpace == 0) ? 0: ((track_meta.mCountInTable < track_meta.mCountCarried) ? track_meta.mCountCarried : track_meta.mCountInTable)"
          }
        }
      ]
    },
    {
      "name" : "basic_tutorial_ingress.send_to_cpu",
      "id" : 8,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00ff"
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 283,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = 255"
          }
        }
      ]
    },
    {
      "name" : "basic_tutorial_ingress.send_to_cpu",
      "id" : 9,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00ff"
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 283,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = 255"
          }
        }
      ]
    },
    {
      "name" : "basic_tutorial_ingress.send_to_cpu",
      "id" : 10,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00ff"
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 283,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = 255"
          }
        }
      ]
    },
    {
      "name" : "basic_tutorial_ingress.send_to_cpu",
      "id" : 11,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00ff"
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 283,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = 255"
          }
        }
      ]
    },
    {
      "name" : "act",
      "id" : 12,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["packet_out", "egress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01ff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "includes/ipv4_forward.p4",
            "line" : 43,
            "column" : 16,
            "source_fragment" : "standard_metadata.egress_spec = (bit<9>)hdr.packet_out.egress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "mcast_grp"]
            },
            {
              "type" : "field",
              "value" : ["packet_out", "mcast_grp"]
            }
          ],
          "source_info" : {
            "filename" : "includes/ipv4_forward.p4",
            "line" : 44,
            "column" : 16,
            "source_fragment" : "standard_metadata.mcast_grp = hdr.packet_out.mcast_grp"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "packet_out"
            }
          ],
          "source_info" : {
            "filename" : "includes/ipv4_forward.p4",
            "line" : 45,
            "column" : 16,
            "source_fragment" : "hdr.packet_out.setInvalid()"
          }
        }
      ]
    },
    {
      "name" : "act_0",
      "id" : 13,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "count_threshold_0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00001be6"
            }
          ],
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 62,
            "column" : 4,
            "source_fragment" : "bit<32> count_threshold = (bit<32>)7142;"
          }
        }
      ]
    },
    {
      "name" : "act_1",
      "id" : 14,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["packet_in", "src_port"]
            },
            {
              "type" : "field",
              "value" : ["tcp", "srcPort"]
            }
          ],
          "source_info" : {
            "filename" : "includes/packetio.p4",
            "line" : 30,
            "column" : 20,
            "source_fragment" : "hdr.packet_in.src_port = hdr.tcp.srcPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["packet_in", "dst_port"]
            },
            {
              "type" : "field",
              "value" : ["tcp", "dstPort"]
            }
          ],
          "source_info" : {
            "filename" : "includes/packetio.p4",
            "line" : 31,
            "column" : 20,
            "source_fragment" : "hdr.packet_in.dst_port = hdr.tcp.dstPort"
          }
        }
      ]
    },
    {
      "name" : "act_2",
      "id" : 15,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["packet_in", "src_port"]
            },
            {
              "type" : "field",
              "value" : ["udp", "srcPort"]
            }
          ],
          "source_info" : {
            "filename" : "includes/packetio.p4",
            "line" : 33,
            "column" : 20,
            "source_fragment" : "hdr.packet_in.src_port = hdr.udp.srcPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["packet_in", "dst_port"]
            },
            {
              "type" : "field",
              "value" : ["udp", "dstPort"]
            }
          ],
          "source_info" : {
            "filename" : "includes/packetio.p4",
            "line" : 34,
            "column" : 20,
            "source_fragment" : "hdr.packet_in.dst_port = hdr.udp.dstPort"
          }
        }
      ]
    },
    {
      "name" : "act_3",
      "id" : 16,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["packet_in", "algo_indicator"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0002"
            }
          ],
          "source_info" : {
            "filename" : "includes/packetio.p4",
            "line" : 25,
            "column" : 16,
            "source_fragment" : "hdr.packet_in.algo_indicator = (bit<16>) 2"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["packet_in", "src_ip"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "includes/packetio.p4",
            "line" : 26,
            "column" : 16,
            "source_fragment" : "hdr.packet_in.src_ip = hdr.ipv4.srcAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["packet_in", "dst_ip"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "includes/packetio.p4",
            "line" : 27,
            "column" : 16,
            "source_fragment" : "hdr.packet_in.dst_ip = hdr.ipv4.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["packet_in", "proto"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ],
          "source_info" : {
            "filename" : "includes/packetio.p4",
            "line" : 28,
            "column" : 16,
            "source_fragment" : "hdr.packet_in.proto = hdr.ipv4.protocol"
          }
        }
      ]
    },
    {
      "name" : "act_4",
      "id" : 17,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "packet_in"
            }
          ],
          "source_info" : {
            "filename" : "includes/packetio.p4",
            "line" : 23,
            "column" : 12,
            "source_fragment" : "hdr.packet_in.setValid()"
          }
        }
      ]
    },
    {
      "name" : "act_5",
      "id" : 18,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["packet_in", "ingress_port"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "includes/packetio.p4",
            "line" : 37,
            "column" : 12,
            "source_fragment" : "hdr.packet_in.ingress_port = (bit<16>)standard_metadata.ingress_port"
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 20,
        "column" : 8,
        "source_fragment" : "basic_tutorial_ingress"
      },
      "init_table" : "tbl_act",
      "tables" : [
        {
          "name" : "tbl_act",
          "id" : 0,
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 62,
            "column" : 4,
            "source_fragment" : "bit<32> count_threshold = (bit<32>)7142;"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [13],
          "actions" : ["act_0"],
          "base_default_next" : "node_3",
          "next_tables" : {
            "act_0" : "node_3"
          },
          "default_entry" : {
            "action_id" : 13,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_0",
          "id" : 1,
          "source_info" : {
            "filename" : "includes/ipv4_forward.p4",
            "line" : 43,
            "column" : 46,
            "source_fragment" : "= (bit<9>)hdr.packet_out.egress_port; ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [12],
          "actions" : ["act"],
          "base_default_next" : "tbl_do_stage1",
          "next_tables" : {
            "act" : "tbl_do_stage1"
          },
          "default_entry" : {
            "action_id" : 12,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "basic_tutorial_ingress.ipv4_forwarding.ipv4_lpm",
          "id" : 2,
          "source_info" : {
            "filename" : "includes/ipv4_forward.p4",
            "line" : 26,
            "column" : 10,
            "source_fragment" : "ipv4_lpm"
          },
          "key" : [
            {
              "match_type" : "lpm",
              "name" : "hdr.ipv4.dstAddr",
              "target" : ["ipv4", "dstAddr"],
              "mask" : null
            }
          ],
          "match_type" : "lpm",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [2, 3, 0, 1],
          "actions" : ["basic_tutorial_ingress.ipv4_forwarding.send_to_cpu", "basic_tutorial_ingress.ipv4_forwarding.ipv4_forward", "drop", "NoAction"],
          "base_default_next" : "tbl_do_stage1",
          "next_tables" : {
            "basic_tutorial_ingress.ipv4_forwarding.send_to_cpu" : "tbl_do_stage1",
            "basic_tutorial_ingress.ipv4_forwarding.ipv4_forward" : "tbl_do_stage1",
            "drop" : "tbl_do_stage1",
            "NoAction" : "tbl_do_stage1"
          },
          "default_entry" : {
            "action_id" : 2,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_do_stage1",
          "id" : 3,
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 293,
            "column" : 8,
            "source_fragment" : "do_stage1()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [4],
          "actions" : ["basic_tutorial_ingress.do_stage1"],
          "base_default_next" : "node_8",
          "next_tables" : {
            "basic_tutorial_ingress.do_stage1" : "node_8"
          },
          "default_entry" : {
            "action_id" : 4,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_send_to_cpu",
          "id" : 4,
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 295,
            "column" : 12,
            "source_fragment" : "send_to_cpu()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [8],
          "actions" : ["basic_tutorial_ingress.send_to_cpu"],
          "base_default_next" : "node_10",
          "next_tables" : {
            "basic_tutorial_ingress.send_to_cpu" : "node_10"
          },
          "default_entry" : {
            "action_id" : 8,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_do_stage2",
          "id" : 5,
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 298,
            "column" : 12,
            "source_fragment" : "do_stage2()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [5],
          "actions" : ["basic_tutorial_ingress.do_stage2"],
          "base_default_next" : "node_12",
          "next_tables" : {
            "basic_tutorial_ingress.do_stage2" : "node_12"
          },
          "default_entry" : {
            "action_id" : 5,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_send_to_cpu_0",
          "id" : 6,
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 300,
            "column" : 16,
            "source_fragment" : "send_to_cpu()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [9],
          "actions" : ["basic_tutorial_ingress.send_to_cpu"],
          "base_default_next" : "node_14",
          "next_tables" : {
            "basic_tutorial_ingress.send_to_cpu" : "node_14"
          },
          "default_entry" : {
            "action_id" : 9,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_do_stage3",
          "id" : 7,
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 303,
            "column" : 16,
            "source_fragment" : "do_stage3()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [6],
          "actions" : ["basic_tutorial_ingress.do_stage3"],
          "base_default_next" : "node_16",
          "next_tables" : {
            "basic_tutorial_ingress.do_stage3" : "node_16"
          },
          "default_entry" : {
            "action_id" : 6,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_send_to_cpu_1",
          "id" : 8,
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 305,
            "column" : 20,
            "source_fragment" : "send_to_cpu()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [10],
          "actions" : ["basic_tutorial_ingress.send_to_cpu"],
          "base_default_next" : "node_18",
          "next_tables" : {
            "basic_tutorial_ingress.send_to_cpu" : "node_18"
          },
          "default_entry" : {
            "action_id" : 10,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_do_stage4",
          "id" : 9,
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 308,
            "column" : 20,
            "source_fragment" : "do_stage4()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [7],
          "actions" : ["basic_tutorial_ingress.do_stage4"],
          "base_default_next" : "node_20",
          "next_tables" : {
            "basic_tutorial_ingress.do_stage4" : "node_20"
          },
          "default_entry" : {
            "action_id" : 7,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_send_to_cpu_2",
          "id" : 10,
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 310,
            "column" : 24,
            "source_fragment" : "send_to_cpu()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [11],
          "actions" : ["basic_tutorial_ingress.send_to_cpu"],
          "base_default_next" : null,
          "next_tables" : {
            "basic_tutorial_ingress.send_to_cpu" : null
          },
          "default_entry" : {
            "action_id" : 11,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_3",
          "id" : 0,
          "source_info" : {
            "filename" : "includes/ipv4_forward.p4",
            "line" : 41,
            "column" : 11,
            "source_fragment" : "hdr.ipv4.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["ipv4", "$valid$"]
              }
            }
          },
          "true_next" : "node_4",
          "false_next" : "tbl_do_stage1"
        },
        {
          "name" : "node_4",
          "id" : 1,
          "source_info" : {
            "filename" : "includes/ipv4_forward.p4",
            "line" : 42,
            "column" : 15,
            "source_fragment" : "standard_metadata.ingress_port == 255"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["standard_metadata", "ingress_port"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00ff"
              }
            }
          },
          "true_next" : "tbl_act_0",
          "false_next" : "basic_tutorial_ingress.ipv4_forwarding.ipv4_lpm"
        },
        {
          "name" : "node_8",
          "id" : 2,
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 294,
            "column" : 12,
            "source_fragment" : "metadata.overflow_flag == (bit<1>)1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata_t.overflow_flag"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "tbl_send_to_cpu",
          "false_next" : "node_10"
        },
        {
          "name" : "node_10",
          "id" : 3,
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 297,
            "column" : 11,
            "source_fragment" : "track_meta.mKeyCarried != 0"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "!=",
              "left" : {
                "type" : "field",
                "value" : ["track_meta_0", "mKeyCarried"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00000000000000000000000000"
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_do_stage2"
        },
        {
          "name" : "node_12",
          "id" : 4,
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 299,
            "column" : 16,
            "source_fragment" : "metadata.overflow_flag == (bit<1>)1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata_t.overflow_flag"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "tbl_send_to_cpu_0",
          "false_next" : "node_14"
        },
        {
          "name" : "node_14",
          "id" : 5,
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 302,
            "column" : 15,
            "source_fragment" : "track_meta.mKeyCarried != 0"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "!=",
              "left" : {
                "type" : "field",
                "value" : ["track_meta_0", "mKeyCarried"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00000000000000000000000000"
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_do_stage3"
        },
        {
          "name" : "node_16",
          "id" : 6,
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 304,
            "column" : 20,
            "source_fragment" : "metadata.overflow_flag == (bit<1>)1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata_t.overflow_flag"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "tbl_send_to_cpu_1",
          "false_next" : "node_18"
        },
        {
          "name" : "node_18",
          "id" : 7,
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 307,
            "column" : 19,
            "source_fragment" : "track_meta.mKeyCarried != 0"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "!=",
              "left" : {
                "type" : "field",
                "value" : ["track_meta_0", "mKeyCarried"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00000000000000000000000000"
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_do_stage4"
        },
        {
          "name" : "node_20",
          "id" : 8,
          "source_info" : {
            "filename" : "basic_tutorial_switch.p4",
            "line" : 309,
            "column" : 24,
            "source_fragment" : "metadata.overflow_flag == (bit<1>)1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata_t.overflow_flag"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_send_to_cpu_2"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 323,
        "column" : 8,
        "source_fragment" : "basic_tutorial_egress"
      },
      "init_table" : "node_24",
      "tables" : [
        {
          "name" : "tbl_act_1",
          "id" : 11,
          "source_info" : {
            "filename" : "includes/packetio.p4",
            "line" : 23,
            "column" : 12,
            "source_fragment" : "hdr.packet_in.setValid()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [17],
          "actions" : ["act_4"],
          "base_default_next" : "node_26",
          "next_tables" : {
            "act_4" : "node_26"
          },
          "default_entry" : {
            "action_id" : 17,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_2",
          "id" : 12,
          "source_info" : {
            "filename" : "includes/packetio.p4",
            "line" : 25,
            "column" : 45,
            "source_fragment" : "= (bit<16>) 2; ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [16],
          "actions" : ["act_3"],
          "base_default_next" : "node_28",
          "next_tables" : {
            "act_3" : "node_28"
          },
          "default_entry" : {
            "action_id" : 16,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_3",
          "id" : 13,
          "source_info" : {
            "filename" : "includes/packetio.p4",
            "line" : 30,
            "column" : 43,
            "source_fragment" : "= hdr.tcp.srcPort; ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [14],
          "actions" : ["act_1"],
          "base_default_next" : "tbl_act_5",
          "next_tables" : {
            "act_1" : "tbl_act_5"
          },
          "default_entry" : {
            "action_id" : 14,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_4",
          "id" : 14,
          "source_info" : {
            "filename" : "includes/packetio.p4",
            "line" : 33,
            "column" : 43,
            "source_fragment" : "= hdr.udp.srcPort; ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [15],
          "actions" : ["act_2"],
          "base_default_next" : "tbl_act_5",
          "next_tables" : {
            "act_2" : "tbl_act_5"
          },
          "default_entry" : {
            "action_id" : 15,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_5",
          "id" : 15,
          "source_info" : {
            "filename" : "includes/packetio.p4",
            "line" : 37,
            "column" : 39,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [18],
          "actions" : ["act_5"],
          "base_default_next" : null,
          "next_tables" : {
            "act_5" : null
          },
          "default_entry" : {
            "action_id" : 18,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_24",
          "id" : 9,
          "source_info" : {
            "filename" : "includes/packetio.p4",
            "line" : 22,
            "column" : 12,
            "source_fragment" : "standard_metadata.egress_port == 255"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["standard_metadata", "egress_port"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00ff"
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_act_1"
        },
        {
          "name" : "node_26",
          "id" : 10,
          "source_info" : {
            "filename" : "includes/packetio.p4",
            "line" : 24,
            "column" : 16,
            "source_fragment" : "metadata.overflow_flag == (bit<1>) 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata_t.overflow_flag"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "tbl_act_2",
          "false_next" : "tbl_act_5"
        },
        {
          "name" : "node_28",
          "id" : 11,
          "source_info" : {
            "filename" : "includes/packetio.p4",
            "line" : 29,
            "column" : 20,
            "source_fragment" : "hdr.tcp.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["tcp", "$valid$"]
              }
            }
          },
          "true_next" : "tbl_act_3",
          "false_next" : "tbl_act_4"
        }
      ]
    }
  ],
  "checksums" : [
    {
      "name" : "cksum",
      "id" : 0,
      "source_info" : {
        "filename" : "includes/checksums.p4",
        "line" : 20,
        "column" : 8,
        "source_fragment" : "update_checksum( ..."
      },
      "target" : ["ipv4", "hdrChecksum"],
      "type" : "generic",
      "calculation" : "calc_3",
      "verify" : false,
      "update" : true,
      "if_cond" : {
        "type" : "expression",
        "value" : {
          "op" : "d2b",
          "left" : null,
          "right" : {
            "type" : "field",
            "value" : ["ipv4", "$valid$"]
          }
        }
      }
    }
  ],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ],
    [
      "intrinsic_metadata.priority",
      ["standard_metadata", "priority"]
    ]
  ],
  "program" : "basic_tutorial_switch.p4",
  "__meta__" : {
    "version" : [2, 18],
    "compiler" : "https://github.com/p4lang/p4c"
  }
}